// For Niksa
var selectedETarget = null;
var selectedETargetNum = null;
var selectedETargetStr = null;
var selectedSingleAnimal = null;
var selectedMultiAnimals = null;
var selectedBalanceType = "bal";
var selectedLayer  = null;

var isModelEcolo = null;
var isModelSingle = null;
var isModelWithDis = null;

var txtRorPriorities;
var rowIndex;
var chart1; 
var chart2;
var chart3;
var chart4;
var chart5;
var chart6;
var chart7;
var chart8;
var chart9;
var chart10;
var chart11;
var chart12;
var chart13;
var chart14;
var chart15;
var chart16;
var allchart1;
var allchart2;
var allchart3;
var allchart4;
var allchart5;
var allchart6;
var allchart7;
var allchart8;
var allchart9;
var allchart10;
var allchart11;
var allchart12;
var allchart13;
var allchart14;
var allchart15;
var allchart16;
var compareData = [];
var compareTable;

var layerOpacity;
var specieLayer;
var currentLayer;

var infoString = null;
var eTargetQuicInfo;
var selectedAnimaQuicInfo;
var selectedDistQuicInfo;
var selectedSliderQuicInfo = "Balanced";
var numEcoloProjects;
var numEconoProjects;


// $('#add-to-compare').attr('disabled', true);
// $('#compare-view').attr('disabled', true);

	  
 $('.ecolo-selected-slider-txt').html("Balanced");
 $('#q-name-err').slideUp();
 $('.hide-on-econo').hide();
 $('.show-for-ecolo').hide();

    var chartWidth = $('.chart-box').width();
    $(".chart").css('width', chartWidth+'px');

    $("#charts-box").removeClass('active');

    $("body").css("overflow", "auto");

 $('.btn-layer').on('click', function(e){
    $('#dropper-1').first().stop(true, true).slideToggle();
  });
  $('.btn-close-setting').on('click', function(e){
    $('#dropper-1').first().stop(true, true).slideToggle();
  });  


  $('.btn-query-info').on('click', function(e){
    $('#dropper-2').first().stop(true, true).slideToggle();
  });
  $('.btn-close-qInfo').on('click', function(e){
    $('#dropper-2').first().stop(true, true).slideToggle();
  });


  $('.btn-query-info-chart').on('click', function(e){
    $('#dropper-3').first().stop(true, true).slideToggle();
  });
  $('.btn-query-info-chart-close').on('click', function(e){
    $('#dropper-3').first().stop(true, true).slideToggle();
  });


      $(".prev-slide").click(function(){
         $("#myCarousel").carousel('prev');
      });

      $(".next-slide").click(function(){
         $("#myCarousel").carousel('next');
      });



//================================================================  DataTables
    var allDataTbl = $('#all-data-tbl').DataTable( {
        
            bFilter: false,
            dom: 'Bfrtip',
           buttons: [  
        'copy', 
        {
           extend: 'excel', 
           title: 'BC Run of River Decision Support Tool'
        },
        {
           extend: 'csv', 
           title: 'BC Run of River Decision Support Tool'
        }
    ]
        } );
     $("#all-data-tbl_wrapper > .dt-buttons").appendTo(".downloads-btns");
     $(".buttons-html5").addClass("btn-xs");
     $(".buttons-html5").eq(0).html('<i class="fa fa-files-o"></i>');    
     $(".buttons-html5").eq(1).html('<i class="fa fa-file-excel-o"></i>');    
     $(".buttons-html5").eq(2).html('<i class="fa fa-table"></i>');    

compareTable = $('#compare-data-tbl').DataTable({
             "language": {
    "info":     "Displaying _START_ to _END_ of _TOTAL_ Model"
   
  }

    });
    $( "#compare-data-tbl tbody" ).sortable({
    stop: function( event, ui ){
        $(this).find('tr').each(function(i){
            $(this).find('td:first').text(i+1);
        });
    }
});

function addDataToCompare(dataSet){
      compareTable.row.add(dataSet).draw(false);
      compareTable.on( 'order.dt search.dt', function () {
      compareTable.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
            cell.innerHTML = i+1;
        } );
    } ).draw();
}

  $(document).on('click', '.remove-row', function(e){
     rowIndex = $(this).closest('tr').index();
      console.log(rowIndex);
  });


$('#remove-model').on('click', function(e){
    compareTable.row(rowIndex).remove().draw();
    $('#deleteModal').modal().hide();
  });

//================================================================  Track Changes
$("#slider").slider({
    animate: true,
    value: 50,
    min: 0,
    max: 100,
    step: 50,
    slide: function(event, ui) {
        $("#slider-value").html(ui.value);
    }
});

$("#slider-value").html($('#slider').slider('value'));

$('#energy-target-selector').on('change', function() {
    selectedETargetStr = $(this).val();
    $('.num').eq(0).css("background-color", "grey");
     $('#query-error').slideUp();
     $('#info-selected-target').html($('#energy-target-selector option:selected').text());
});

$('input:checkbox[name=projectsWith]').eq(4).change(function() {
    if ($(this).is(':checked')) {
        $('input:checkbox[name=projectsWith]').prop("checked", true);
        selectedETargetNum = "cdef";
         txtRorPriorities = "Cost, Population, Energy, Footprint";
        
    } else {
        $('input:checkbox[name=projectsWith]').prop("checked", false);
        selectedETargetNum = null;
         txtRorPriorities = null;
    }
});

$('input:checkbox[name=projectsWith]').on('change', function() {
    var val = '';
    $('input:checkbox[name=projectsWith]:checked').each(function() {
        val += $(this).val();
    });
    switch (val) {
       case 'c':
            selectedETargetNum = 'c';
            txtRorPriorities = "Cost";
             console.log(selectedETargetNum);
            break;
        case 'd':
            selectedETargetNum = 'd';
            txtRorPriorities = "Population";
             console.log(selectedETargetNum);
            break;
        case 'e':
            selectedETargetNum = 'e';
            txtRorPriorities = "Energy";
             console.log(selectedETargetNum);
            break;
        case 'f':
            selectedETargetNum = 'f';
            txtRorPriorities = "Footprint";
             console.log(selectedETargetNum);
             break;
        case 'cd':
            selectedETargetNum = 'cd';
            txtRorPriorities = "Cost, Population";
             console.log(selectedETargetNum);
            break;
        case 'ce':
            selectedETargetNum = 'ce';
            txtRorPriorities = "Cost, Energy";
             console.log(selectedETargetNum);
            break;
        case 'cf':
            selectedETargetNum = val;
            txtRorPriorities = "Cost, Footprint";
             console.log(selectedETargetNum);
            break;
       case 'dc':
            selectedETargetNum = val;
            txtRorPriorities = "Population, Energy";
             console.log(selectedETargetNum);
            break;
        case 'ed':
            selectedETargetNum = val;
            txtRorPriorities = "Population, Energy";
             console.log(selectedETargetNum);
            break;
        case 'fd':
            selectedETargetNum = 'df';
            txtRorPriorities = "Population, Footprint";
             console.log(selectedETargetNum);
            break;
        case 'ef':
            selectedETargetNum = val;
            txtRorPriorities = "Energy, Footprint";
             console.log(selectedETargetNum);
            break;
        case 'ced':
            selectedETargetNum = 'cde';
             txtRorPriorities = "Cost, Population, Energy";
             console.log(selectedETargetNum);
             break;
        case 'cef':
            selectedETargetNum = val;
              txtRorPriorities = "Cost, Energy, Footprint";
             console.log(selectedETargetNum);
               break;
        case 'cfd':
            selectedETargetNum = 'cdf';
             txtRorPriorities = "Cost, Population, Footprint";
             console.log(selectedETargetNum);
             break;
        case 'efd':
            selectedETargetNum = 'def';
              txtRorPriorities = "Population, Energy, Footprint";
                 console.log(selectedETargetNum);
            break;
        case 'cefd':
            selectedETargetNum = 'cdef';
              txtRorPriorities = "Cost, Population, Energy, Footprint";
             console.log(selectedETargetNum);
            break;
    }
    $('.num').eq(1).css("background-color", "grey");
});


$('input:radio[name=withDisturbance]').on('change', function() {
    var val = $('input:radio[name=withDisturbance]:checked').val();
    switch (val) {
        case 'withOutDisturbance':
            $('.ecolo-selected-dist-txt').html("No");
            selectedDistQuicInfo = "No";
            isModelWithDis = false;
            break;
        case 'withDisturbance':
            $('.ecolo-selected-dist-txt').html("Yes");
            selectedDistQuicInfo = "Yes";
            isModelWithDis = true;
            break;
    }
    $('.num').eq(2).css("background-color", "grey");
});

$('input:radio[name=withOverlap]').on('change', function() {
    var val = $('input:radio[name=withOverlap]:checked').val();
    switch (val) {
        case 'single':
            isModelEcolo = true;
            isModelSingle = true;
            $('#query-error').slideUp();
            $('#with-disturb').slideDown();
            $('#balance').slideDown();
            $('#multi-list-group').slideUp();
            $('#single-list-group').hide().removeClass('hidden').slideDown();
            break;
        case 'multi':
            isModelEcolo = true;
            isModelSingle = false;
            $('#query-error').slideUp();
            $('#with-disturb').slideDown();
            $('#balance').slideDown();
            $('#single-list-group').slideUp();
            $('#multi-list-group').hide().removeClass('hidden').slideDown();
            break;
        case 'none':
            isModelEcolo = false;
            $('#query-error').slideUp();
            $('#with-disturb').slideUp();
            $('#single-list-group').slideUp();
            $('#multi-list-group').slideUp();
            $('#balance').slideUp();
            break;
    }
    $('.num').eq(3).css("background-color", "grey");
});

$('input:radio[name=balance]').on('change', function() {
    var value = $("#slider").slider("value");
    var val = $('input:radio[name=balance]:checked').val();
    switch (val) {
        case 'economics':
            selectedBalanceType = "econo";
            $('.ecolo-selected-slider-txt').html("Economic");
            selectedSliderQuicInfo = "Economic";
            $("#slider").slider("value", 0);
            break;
        case 'balanced':
            $('.ecolo-selected-slider-txt').html("Balanced");
            selectedBalanceType = "bal";
            selectedSliderQuicInfo = "Balanced";
            $("#slider").slider("value", 50);
            break;
        case 'ecology':
            $('.ecolo-selected-slider-txt').html("Ecology");
            selectedBalanceType = "ecolo";
             selectedSliderQuicInfo = "Ecology";
            $("#slider").slider("value", 100);
            break;
        default:
            selectedBalanceType = "bal";
    }
});

$('#single-animal-select').on('change', function() {
    $('.ecolo-selected-animal-txt').html($(this).find("option:selected").text());
    selectedAnimaQuicInfo = $(this).find("option:selected").text();
    selectedSingleAnimal = $(this).val();
     selectedLayer = $("option:selected", this).data('index');
    $('#query-error').slideUp();
    $('.num').eq(3).css("background-color", "grey");
});


$('#multi-animals-select').on('change', function() {
    $('.ecolo-selected-animal-txt').html($(this).find("option:selected").text());
    selectedAnimaQuicInfo = $(this).find("option:selected").text();
    selectedMultiAnimals = $(this).val();
    selectedLayer = $("option:selected", this).data('index');
    $('#query-error').slideUp();
    $('.num').eq(3).css("background-color", "grey");
});


//================================================================  Validate Query

function validateQuery() {

    var validEnergyTarget = $("#energy-target-selector").val();
    var validProjectsKeys = $('input:checkbox[name=projectsWith]');
    var ValidWithDisturbance = $('input:radio[name=withDisturbance]');
    var ValidWithOverlap = $('input:radio[name=withOverlap]');
    var validSingleAnimal = $("#single-animal-select").val();
    var validMultiAnimals = $("#multi-animals-select").val();
    var selectedWithOvelap = $('input:radio[name=withOverlap]:checked').val();

    if (validEnergyTarget == 0) {
        $('#query-error').slideDown();
        $('.num').eq(0).css("background-color", "#FF6600");
        return false;
    } else if (validProjectsKeys.is(':checked') == false) {
        $('#query-error').slideDown();
        $('.num').eq(1).css("background-color", "#FF6600");
        return false;
    } else if ($(ValidWithOverlap).is(':checked') == false) {
        $('#query-error').slideDown();
        $('.num').eq(2).css("background-color", "#FF6600");
        return false;
    } else if ($("input:radio[name=withOverlap]").is(':checked') == true) {
        if (selectedWithOvelap === "single") {
            if (validSingleAnimal === "0") {
                $('#query-error').slideDown();
                $('.num').eq(2).css("background-color", "#FF6600");
                return false;
            }
            else if ($(ValidWithDisturbance).is(':checked') == false) {
        $('#query-error').slideDown();
        $('.num').eq(3).css("background-color", "#FF6600");
        return false;
    } 
        }
        if (selectedWithOvelap === "multi") {
            if (validMultiAnimals === "0") {
                $('#query-error').slideDown();
                $('.num').eq(2).css("background-color", "#FF6600");
                return false;
            }
            else if ($(ValidWithDisturbance).is(':checked') == false) {
        $('#query-error').slideDown();
        $('.num').eq(3).css("background-color", "#FF6600");
        return false;
    } 

        }
    }
    return true;
}

function fNum (num) {
    return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,")
}
//================================================================  Reset The Query 
function resetModel() {

    $('#query-modal').modal('hide');

    selectedETarget = null;
    selectedETargetNum = null;
    selectedETargetStr = null;
    selectedSingleAnimal = null;
    selectedMultiAnimals = null;
    selectedBalanceType = "bal";
    isModelEcolo = null;
    isModelSingle = null;
    isModelWithDis = null;
    

}


//$('.selectpicker').selectpicker();

$("#custom-drop-down").on("click", function() {
    $(".custom-menu").slideDown();
});

$(".close-custom-drop-down").on("click", function() {
    $(".custom-menu").slideUp();
});

    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        $($.fn.dataTable.tables(true)).DataTable()
            .columns.adjust()
            .responsive.recalc();
    });
 $('#collapse-all-data-table').on('shown.bs.collapse', function (e) {
        $($.fn.dataTable.tables(true)).DataTable()
            .columns.adjust()
            .responsive.recalc();
    });

var map;
var basemap = ['gray', 'satellite', 'hybrid', 'terrain', 'topo', 'streets', 'dark-gray', 'oceans', 'national-geographic', 'osm'];
var points = [];
var layer1;
var layer2;
var clusterLayer;
require([
        "esri/map",
        "esri/layers/FeatureLayer", 
        "esri/layers/RasterLayer",
        "esri/dijit/Scalebar",
        "dojo/_base/array",
        "esri/layers/ArcGISDynamicMapServiceLayer",
        "esri/geometry/Geometry",
        "esri/geometry/Point",
        "esri/geometry/webMercatorUtils",
        "extras/ClusterLayer",
        "esri/graphic",
        "esri/symbols/SimpleMarkerSymbol",
        "esri/symbols/SimpleLineSymbol",
        "esri/symbols/SimpleFillSymbol",
        "esri/symbols/PictureMarkerSymbol",
        "esri/renderers/ClassBreaksRenderer",
        "esri/Color",
        "esri/InfoTemplate",
        "esri/dijit/HomeButton",
        "esri/dijit/OverviewMap",
        "dojo/parser",
        "esri/layers/GraphicsLayer",
        "esri/SpatialReference",
        "esri/dijit/PopupTemplate",
        "dijit/layout/BorderContainer",
        "dijit/layout/ContentPane",

        "dojo/dom",
        "dojo/on",
        "dojo/domReady!"
], function( Map, FeatureLayer,RasterLayer,Scalebar, arrayUtils, ArcGISDynamicMapServiceLayer, Geometry, Point, webMercatorUtils,  ClusterLayer, Graphic, SimpleMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol, PictureMarkerSymbol, ClassBreaksRenderer, Color, InfoTemplate, HomeButton, OverviewMap, parser, GraphicsLayer, SpatialReference, PopupTemplate, dom, on) {
    parser.parse();
    map = new Map("map", {
        center: [-126.687482, 54.793577],
        zoom: 5,
        maxZoom:12,
        minZoom:5,
        slider: false,
        basemap: basemap[4]
    });
    var scalebar = new Scalebar({
          map: map,
          // "dual" displays both miles and kilmometers
          // "english" is the default, which displays miles
          // use "metric" for kilometers
          scalebarUnit: "dual",
          attachTo: "top-right"
        });
    map.on("load", function() {
        extent = map.extent
    });

    $("#zoomOutBtn").on("click", function() {
        map.setZoom(map.getZoom() - 1);
    });
    $("#zoomInBtn").on("click", function() {
        map.setZoom(map.getZoom() + 1);
    });
    $("#goHomeBtn").on("click", function() {
        map.setExtent(extent);
    });


    var overviewMap = new OverviewMap({
        map: map,
        attachTo: "bottom-right",
        width: 250,
        visible: true
    });
    overviewMap.startup();

    $('input:radio[name=mapBaseLayerSelect]').on('change', function(){
       map.setBasemap(basemap[$('input:radio[name=mapBaseLayerSelect]:checked').val()]);
    
    });

//    $("#base-map-options").on("change", function() {
//        map.setBasemap(basemap[$('option:selected').val()]);
//    });

    //lyrPath="http://renewablestoolbox.biol.sfu.ca/rorapp/rest/services//RORApp/MapServer?f=jsapi";
    lyrPath="http://renewablestoolbox.biol.sfu.ca/rorapp/rest/services/RORApp/MapServer/";
// ================================================    For Setting Layers     
    var singleEcoloWithLyr    = new ArcGISDynamicMapServiceLayer(lyrPath);
        singleEcoloWithLyr.id = 'sew';
    var singleEcoloWithOutLyr = new ArcGISDynamicMapServiceLayer(lyrPath);
        singleEcoloWithOutLyr.id = 'sewo';
    var multiEcoloWithLyr     = new ArcGISDynamicMapServiceLayer(lyrPath);
        multiEcoloWithLyr.id =  'mew';
    var multiEcoloWithOutLyr  = new ArcGISDynamicMapServiceLayer(lyrPath);
        multiEcoloWithOutLyr.id = 'mewo';
    var lyr = new ArcGISDynamicMapServiceLayer(lyrPath);
    
var roadLayer;
    $('input:checkbox[name=roadLayer]').on('change', function(){
    if($(this).is(':checked')){
        $('#opa-btn-1').removeClass('disabled');
           var index = $(this).val();
           roadLayer = new FeatureLayer(lyrPath+index);
           roadLayer.id = 'roadslyr';
           map.addLayer(roadLayer); 
    }
    else{
        $('#opa-btn-1').addClass('disabled');
        $('#layer-collapse-one').collapse('hide');
          var index = $(this).val();
          map.removeLayer(roadLayer);
        }
});
    
var protectedLayer;
    $('input:checkbox[name=protectedLayer]').on('change', function(){
    if($(this).is(':checked')){
          $('#opa-btn-2').removeClass('disabled');
           var index = $(this).val();
           protectedLayer = new FeatureLayer(lyrPath+index);
           protectedLayer.id = 'protectlyr';
           map.addLayer(protectedLayer); 
    }
    else{
        $('#opa-btn-2').addClass('disabled');
        $('#layer-collapse-two').collapse('hide');
          var index = $(this).val();
          map.removeLayer(protectedLayer);
        }
});    
var disturbLayer;
    $('input:checkbox[name=disturbLayer]').on('change', function(){
    if($(this).is(':checked')){
          $('#opa-btn-3').removeClass('disabled');
           var index = $(this).val();
           disturbLayer = new ArcGISDynamicMapServiceLayer(lyrPath);
           disturbLayer.id = 'distlyr';
           disturbLayer.setVisibleLayers([index]);
           map.addLayer(disturbLayer); 
           map.reorderLayer(disturbLayer,1);
    }
    else{
         $('#opa-btn-3').addClass('disabled');
         $('#layer-collapse-three').collapse('hide');
          var index = $(this).val();
          map.removeLayer(disturbLayer);
         
        }
});
var fishLayer;
    $('input:checkbox[name=fishLayer]').on('change', function(){
    if($(this).is(':checked')){
           $('#opa-btn-4').removeClass('disabled');
           var index = $(this).val();
           fishLayer = new ArcGISDynamicMapServiceLayer(lyrPath);
           fishLayer.id = 'fishlyr';
           fishLayer.setVisibleLayers([index]);
           map.addLayer(fishLayer); 
           map.reorderLayer(fishLayer,1);
    }
    else{
         $('#opa-btn-4').addClass('disabled');
         $('#layer-collapse-four').collapse('hide');
          var index = $(this).val();
          map.removeLayer(fishLayer);
        }
});   
var damLayer;
    $('input:checkbox[name=damLayer]').on('change', function(){
    if($(this).is(':checked')){
         $('#opa-btn-5').removeClass('disabled');
           var index = $(this).val();
           damLayer = new FeatureLayer(lyrPath+index);
           damLayer.id = 'damlyr';
           map.addLayer(damLayer); 
    }
    else{
         $('#opa-btn-5').addClass('disabled');
         $('#layer-collapse-five').collapse('hide');
          var index = $(this).val();
          map.removeLayer(damLayer);
        }
});       
   
$('input:checkbox[name=selLayer]').on('change', function(){
    if($(this).is(':checked')){
        $('#opa-btn-6').removeClass('disabled');
        specieLayer.show();

    }
    else{
         $('#opa-btn-6').addClass('disabled');
         $('#layer-collapse-six').collapse('hide');
         specieLayer.hide();
    }
});    
 $("#layer-op-1").slider({
    value: 100,
    min: 1,
    max: 100,
    slide: function (event, ui) {
         var opRoadLayer = map.getLayer("roadslyr");
         layerOpacity = ui.value / 100;
         opRoadLayer.setOpacity(layerOpacity);
    }
});

$("#layer-op-2").slider({
    value: 100,
    min: 1,
    max: 100,
    slide: function (event, ui) {
         var opProtectLayer = map.getLayer("protectlyr");
         layerOpacity = ui.value / 100;
          opProtectLayer.setOpacity(layerOpacity);
    }
});
$("#layer-op-3").slider({
    value: 100,
    min: 1,
    max: 100,
    slide: function (event, ui) {
         var opDistLayer = map.getLayer("distlyr");
         layerOpacity = ui.value / 100;
          opDistLayer.setOpacity(layerOpacity);
    }
});

$("#layer-op-4").slider({
    value: 100,
    min: 1,
    max: 100,
    slide: function (event, ui) {
         var opFishLayer = map.getLayer("fishlyr");
         layerOpacity = ui.value / 100;
         opFishLayer.setOpacity(layerOpacity);
    }
});
$("#layer-op-5").slider({
    value: 100,
    min: 1,
    max: 100,
    slide: function (event, ui) {
         var opDamLayer = map.getLayer("damlyr");
         layerOpacity = ui.value / 100;
         opDamLayer.setOpacity(layerOpacity);
    }
});
$("#layer-op-6").slider({
    value: 100,
    min: 1,
    max: 100,
    slide: function (event, ui) {
        var opSpecLayer = map.getLayer(currentLayer);
         layerOpacity = ui.value / 100;
         opSpecLayer.setOpacity(layerOpacity);
    }
});   
    


    $("body").on("click", "image", function() {
        $('.esriPopup .sizer .actionsPane .actionList a > span ').html('<i class="fa fa-dot-circle-o"></i> Zoom to Project');
    });
    

  $('#info-button').click(function() {
    if($(this).css("margin-left") == "300px")
    {
        $('.info').animate({"margin-left": '-=300'});
        $('#info-button').animate({"margin-left": '-=300'});
    }
    else
    {
        $('.info').animate({"margin-left": '+=300'});
        $('#info-button').animate({"margin-left": '+=300'});
    }


  });
  $('#layers-button').click(function() {
    if($(this).css("margin-left") == "300px")
    {
        $('.layers').animate({"margin-left": '-=300'});
        $('#layers-button').animate({"margin-left": '-=300'});
    }
    else
    {
        $('.layers').animate({"margin-left": '+=300'});
        $('#layers-button').animate({"margin-left": '+=300'});
    }


  });

    //================================================================  Submitting The Query
    $("#submit-query").on("click", function() {
        if (validateQuery()) {
            $('#query-modal').modal('hide');
          
            if (isModelEcolo) {
                $('.hide-on-econo').show();
                $('.show-for-ecolo').show();
                if (isModelSingle) {
                    if (isModelWithDis) {
                        selectedETarget = selectedETargetNum + "_" + selectedETargetStr;
                        eTargetQuicInfo = selectedETargetStr;
                        var qdata = {
                            token: tok,
                            eTraget: selectedETarget,
                            animal: selectedSingleAnimal,
                            balanceType: selectedBalanceType
                        };
                        var singleEcoloWithResult = $.ajax({
                            type: "POST",
                            url: "assets/app/singleEcoloWithResult.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
  
                            },
                            success: function() {
                            
                            }
                        });
                        singleEcoloWithResult.done(function(resInfo) {
                         $('#result-col').html(resInfo[0].Col);   
                         $('#result-col-over').html(resInfo[0].Col_Over);   
                        }); 
                        singleEcoloWithResult.fail(function(jqXHR, textStatus) {
                            console.log("Request failed: " + textStatus);
                        });
                        
                        var singleEcoloWith = $.ajax({
                            type: "POST",
                            url: "assets/app/singleEcoloWith.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                             $('#query-wait-mask').css('display', 'block');
                             singleEcoloWithLyr.id = 'sew'; 
                             currentLayer = 'sew';   
                             singleEcoloWithLyr.setVisibleLayers([selectedLayer]);
                             map.addLayer(singleEcoloWithLyr);
                             specieLayer = map.getLayer("sew");
                                $('.ecolo-selected-E-Target').html(fNum(selectedETargetStr)+ ' GWh/yr');
                                $('.econo-selected-E-Target').html(fNum(selectedETargetStr)+ ' GWh/yr');
                                $('.ecolo-selected-ROR').html(txtRorPriorities);
                                $('.econo-selected-ROR').html(txtRorPriorities);
                            },
                            success: function() {
                                $('#query-wait-mask').css('display', 'none');
                            }
                        });

                        singleEcoloWith.done(function(mapInfo) {
                        numEcoloProjects = mapInfo.length;    
                        var arr = [];
                        $.each(mapInfo, function(i,v) {
                                arr.push($.map(v, function(v1) {
                                return v1;
                            }));
                        });
                        allDataTbl.clear().rows.add(arr).draw();
                        $("#total-your-model").html(mapInfo.length);
                            
                        $("#projects-legend").animate({left: "25px"});

                        drawPoints(mapInfo);
                        addClusters(mapInfo);
                        clusterLayer.setVisibility(false);    
                        $('input:checkbox[name=clusterPoints]').on('change', function () {
                        if ($(this).is(':checked')) {
                        $('.esriPopup .contentPane').css('min-height', '230px');
                        map.infoWindow.hide();
                        clusterLayer.setVisibility(true);       
                        layer1.setVisibility(false);       
                       
                        } else {
                        $('.esriPopup .contentPane').css('min-height', '340px');
                        map.infoWindow.hide();
                        clusterLayer.setVisibility(false);
                        layer1.setVisibility(true);     
                        }
                        });  

                            
                        }); //end Single Done

                        singleEcoloWith.fail(function(jqXHR, textStatus) {
                            console.log("Request failed: " + textStatus);
                        });
                        var singleEcoloWithCharts = $.ajax({
                            type: "POST",
                            url: "assets/app/chartSingleEcoloWith.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                                $('#chart-loader').html('<i class="fa fa-cog fa-spin"></i>');
                            },
                            success: function() {
                                $('#chart-loader').html('<i class="fa fa-bar-chart"></i>');
                                $('#chart-view-btn').removeClass('disabled');
                                $('#add-to-compare').removeClass('disabled');
                            }
                        });
                    singleEcoloWithCharts.done(function(chartInfo) {
                  numEconoProjects = chartInfo[0].econo_roads_Total_val;
//        compareData.push("");
//        compareData.push(fNum((chartInfo[0].ecolo_roads_Sum_val).toFixed(2)));
//        compareData.push(fNum((chartInfo[1].ecolo_powerlines_Sum_val).toFixed(2)));
//        compareData.push(fNum((chartInfo[2].ecolo_penstocks_Sum_val/1000).toFixed(2)));
//        compareData.push(fNum((chartInfo[3].ecolo_instcaps_Sum_val).toFixed(2)));
//        compareData.push(fNum((chartInfo[4].ecolo_annualFirmEnergys_Sum_val).toFixed(2)));
//        compareData.push(fNum((chartInfo[5].ecolo_costofenergys_Sum_val).toFixed(2)));
//        compareData.push(fNum((chartInfo[6].ecolo_footprints_Sum_val).toFixed(2)));
//        compareData.push(fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2)));

//var ecoloInfoTable = '<table class="table table-striped table-bordered"><tr><td>Energy Target</td><td><span class="">'+ eTargetQuicInfo +'</span></td></tr><tr><td>Run of River Priorities:</td><td><span class="">'+ txtRorPriorities +'</span></td></tr><tr><td>Species:</td><td><span class="">'+ eTargetQuicInfo +'</span></td></tr><tr><td>Disturbance:</td><td><span class="">'+ eTargetQuicInfo +'</span></td></tr><tr><td>Slider:</td><td><span class="">'+ eTargetQuicInfo +'</span></td></tr></table>';

var ecoloInfoTable = '- Energy Target: <strong>'+ eTargetQuicInfo+' GWh/yr </strong> <br /> - Run of River Priorities: <br /> <strong>&nbsp;&nbsp;&nbsp;'+ txtRorPriorities+' </strong> <br /> - Species: <strong>'+ selectedAnimaQuicInfo +' </strong> <br /> - Disturbance: <strong>'+ selectedDistQuicInfo +'</strong> <br /> - Slider: <strong>'+ selectedSliderQuicInfo +'</strong>';                      
                
          compareData[0]  = "";
          compareData[2]  = fNum((chartInfo[0].ecolo_roads_Sum_val).toFixed(2));                
          compareData[3]  = fNum((chartInfo[1].ecolo_powerlines_Sum_val).toFixed(2));
          compareData[4]  = fNum((chartInfo[2].ecolo_penstocks_Sum_val).toFixed(2));
          compareData[5]  = fNum((chartInfo[3].ecolo_instcaps_Sum_val).toFixed(2));
          compareData[6]  = fNum((chartInfo[4].ecolo_annualFirmEnergys_Sum_val).toFixed(2));
          compareData[7]  = fNum((chartInfo[5].ecolo_costofenergys_Sum_val).toFixed(2));
          compareData[8]  = fNum((chartInfo[6].ecolo_footprints_Sum_val).toFixed(2));
          compareData[9]  = fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2));
          compareData[10] = '<button type="button" class="btn btn-default btn-xs btn-rwo-info" data-container="body" data-toggle="popover" data-placement="top" data-content="'+ecoloInfoTable+'"> <i class="fa fa-question"></i></button>';           
          compareData[11] = '<button type="button" class="btn btn-default btn-xs remove-row" data-toggle="modal" data-target="#deleteModal"><i class="fa fa-minus"></i></button>';           
          compareData[12] = '<button type="button" class="btn btn-default btn-xs add-row-db"><i class="fa fa-plus"></i></button>';           
         
                        

$('.total-econo-model').text(chartInfo[0].econo_roads_Total_val);
$('#ecolo-road-sum-1, #ecolo-road-sum-2').text(fNum((chartInfo[0].ecolo_roads_Sum_val).toFixed(2)));
$('#econo-road-sum-1, #econo-road-sum-2').text(fNum((chartInfo[0].econo_roads_Sum_val).toFixed(2)));
$('#ecolo-powerlines-sum, #ecolo-powerline-sum-2').text(fNum((chartInfo[1].ecolo_powerlines_Sum_val).toFixed(2)));
$('#econo-powerlines-sum, #econo-powerline-sum-2').text(fNum((chartInfo[1].econo_powerlines_Sum_val).toFixed(2)));
$('#ecolo-penstocks-sum, #ecolo-penstock-sum-2').text(fNum((chartInfo[2].ecolo_penstocks_Sum_val/1000).toFixed(2)));
$('#econo-penstocks-sum, #econo-penstock-sum-2').text(fNum((chartInfo[2].econo_penstocks_Sum_val/1000).toFixed(2)));
$('#ecolo-instcaps-sum, #ecolo-instCap-sum-2').text(fNum((chartInfo[3].ecolo_instcaps_Sum_val).toFixed(2)));
$('#econo-instcaps-sum, #econo-instCap-sum-2').text(fNum((chartInfo[3].econo_instcaps_Sum_val).toFixed(2)));
$('#ecolo-annualFirmEnergys-sum, #ecolo-annFirEnergy-sum-2').text(fNum((chartInfo[4].ecolo_annualFirmEnergys_Sum_val).toFixed(2)));
$('#econo-annualFirmEnergys-sum, #econo-annFirEnergy-sum-2').text(fNum((chartInfo[4].econo_annualFirmEnergys_Sum_val).toFixed(2)));
                       
                        console.log(numEcoloProjects);
                        console.log(numEconoProjects);
$('#ecolo-costofenergys-sum, #ecolo-costOfEnergey-sum-2').text(fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2)));
$('#econo-costofenergys-sum, #econo-costOfEnergey-sum-2').text(fNum((chartInfo[7].econo_costperyears_Sum_val/1000000).toFixed(2)));
$('#ecolo-footprints-sum, #ecolo-footprint-sum-2').text(fNum((chartInfo[6].ecolo_footprints_Sum_val).toFixed(2)));
$('#econo-footprints-sum, #econo-footprint-sum-2').text(fNum((chartInfo[6].econo_footprints_Sum_val).toFixed(2)));
$('#ecolo-costperyears-sum, #ecolo-costPerYear-sum-2').text(fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2)));
$('#econo-costperyears-sum, #econo-costPerYear-sum-2').text(fNum((chartInfo[7].econo_costperyears_Sum_val/1000000).toFixed(2)));
       
function drawRoadCharts(){
chart1  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-1',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
            symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Road Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].ecolo_roads_Min_val)+' - '+ Math.round(chartInfo[0].ecolo_roads_Step_2), Math.round(chartInfo[0].ecolo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_3), Math.round(chartInfo[0].ecolo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_4), Math.round(chartInfo[0].ecolo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_5), Math.round(chartInfo[0].ecolo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_6), Math.round(chartInfo[0].ecolo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_7), Math.round(chartInfo[0].ecolo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_8), Math.round(chartInfo[0].ecolo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
            return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            },
         events: {
            legendItemClick: function () {
                return false; 
            }
        }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].ecolo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Max_val) + ' km'
    },
    null]
    }]
});
chart2  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-2',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Road Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].econo_roads_Min_val)+' - '+ Math.round(chartInfo[0].econo_roads_Step_2), Math.round(chartInfo[0].econo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_3), Math.round(chartInfo[0].econo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_4), Math.round(chartInfo[0].econo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_5), Math.round(chartInfo[0].econo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_6), Math.round(chartInfo[0].econo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_7), Math.round(chartInfo[0].econo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_8), Math.round(chartInfo[0].econo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].econo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
               return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].econo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Max_val) + ' km'
    },
    null]
    }]

});

}//end of Road Charts
         drawRoadCharts();
function drawPowerlineCharts(){
chart3  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-3',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Powerline Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].ecolo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2), Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_3), Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_4), Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_5), Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_6), Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_7), Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_8), Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});
chart4  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-4',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Powerline Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].econo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].econo_powerlines_Step_2), Math.round(chartInfo[1].econo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_3), Math.round(chartInfo[1].econo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_4), Math.round(chartInfo[1].econo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_5), Math.round(chartInfo[1].econo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_6), Math.round(chartInfo[1].econo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_7), Math.round(chartInfo[1].econo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_8), Math.round(chartInfo[1].econo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].econo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawPowerlineCharts();
function drawPenstocksCharts(){
chart5  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-5',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Penstock Length (km)';
        }
    },
    xAxis: {
 categories: ['',(chartInfo[2].ecolo_penstocks_Min_val/1000).toFixed(1)+' - '+ (chartInfo[2].ecolo_penstocks_Step_2/1000).toFixed(1), (chartInfo[2].ecolo_penstocks_Step_2/1000).toFixed(1) + ' - ' + (chartInfo[2].ecolo_penstocks_Step_3/1000).toFixed(1), (chartInfo[2].ecolo_penstocks_Step_3/1000).toFixed(1) + ' - ' + (chartInfo[2].ecolo_penstocks_Step_4/1000).toFixed(1), (chartInfo[2].ecolo_penstocks_Step_4/1000).toFixed(1) + ' - ' + (chartInfo[2].ecolo_penstocks_Step_5/1000).toFixed(1), (chartInfo[2].ecolo_penstocks_Step_5/1000).toFixed(1) + ' - ' + (chartInfo[2].ecolo_penstocks_Step_6/1000).toFixed(1), (chartInfo[2].ecolo_penstocks_Step_6/1000).toFixed(1) + ' - ' + (chartInfo[2].ecolo_penstocks_Step_7/1000).toFixed(1), (chartInfo[2].ecolo_penstocks_Step_7/1000).toFixed(1) + ' - ' + (chartInfo[2].ecolo_penstocks_Step_8/1000).toFixed(1), (chartInfo[2].ecolo_penstocks_Step_8/1000).toFixed(1) + ' - ' + (chartInfo[2].ecolo_penstocks_Max_val/1000).toFixed(1),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_1/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000)+ ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + 'km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Max_val/1000) + ' km'
    },
    null]
    }]

});
chart6  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-6',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Penstock Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].econo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000), Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_3/1000), Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_4/1000), Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_5/1000), Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_6/1000), Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_7/1000), Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_8/1000), Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Max_val/1000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].econo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_1/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_6/1000)+ ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + 'km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Max_val/1000) + ' km'
    },
    null]
    }]

});

}//end of Penstocks Charts
         drawPenstocksCharts();
function drawannualFirmEnergysCharts(){
chart9  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-9',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Annual Firm Energy (GWh/yr)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].ecolo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});
chart10  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-10',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Annual Firm Energy (GWh/yr)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].econo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawannualFirmEnergysCharts();
function drawcostofenergysCharts(){
chart11  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-11',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Cost ($/MWh)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].ecolo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2), Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_3), Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_4), Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_5), Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_6), Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_7), Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_8), Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});
chart12  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-12',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Cost ($/MWh)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].econo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].econo_costofenergys_Step_2), Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_3), Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_4), Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_5), Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_6), Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_7), Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_8), Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawcostofenergysCharts();
function drawAllCharts(){
    allchart1  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-1',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].ecolo_roads_Min_val)+' - '+ Math.round(chartInfo[0].ecolo_roads_Step_2), Math.round(chartInfo[0].ecolo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_3), Math.round(chartInfo[0].ecolo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_4), Math.round(chartInfo[0].ecolo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_5), Math.round(chartInfo[0].ecolo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_6), Math.round(chartInfo[0].ecolo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_7), Math.round(chartInfo[0].ecolo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_8), Math.round(chartInfo[0].ecolo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Max_val),''],       
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
            return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].ecolo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Max_val) + ' km'
    },
    null]
    }]
});
allchart2  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-2',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].econo_roads_Min_val)+' - '+ Math.round(chartInfo[0].econo_roads_Step_2), Math.round(chartInfo[0].econo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_3), Math.round(chartInfo[0].econo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_4), Math.round(chartInfo[0].econo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_5), Math.round(chartInfo[0].econo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_6), Math.round(chartInfo[0].econo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_7), Math.round(chartInfo[0].econo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_8), Math.round(chartInfo[0].econo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].econo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
               return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].econo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Max_val) + ' km'
    },
    null]
    }]

});
allchart3  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-3',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].ecolo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2), Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_3), Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_4), Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_5), Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_6), Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_7), Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_8), Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});
allchart4  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-4',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].econo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].econo_powerlines_Step_2), Math.round(chartInfo[1].econo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_3), Math.round(chartInfo[1].econo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_4), Math.round(chartInfo[1].econo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_5), Math.round(chartInfo[1].econo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_6), Math.round(chartInfo[1].econo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_7), Math.round(chartInfo[1].econo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_8), Math.round(chartInfo[1].econo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].econo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});  
callchart5  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-5',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].ecolo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Max_val/1000),''],
       labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_1) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6)+ ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7) + 'km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8) + ' km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Max_val) + ' km'
    },
    null]
    }]

});
allchart6  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-6',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].econo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000), Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_3/1000), Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_4/1000), Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_5/1000), Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_6/1000), Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_7/1000), Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_8/1000), Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Max_val/1000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].econo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_1) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_2) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_2) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_3) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_3) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_4) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_4) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_5) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_5) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_6) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_6)+ ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_7) + 'km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_7) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_8) + ' km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_8) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Max_val) + ' km'
    },
    null]
    }]

}); 
    allchart7  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-7',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[3].ecolo_instcaps_Min_val)+' - '+ Math.round(chartInfo[3].ecolo_instcaps_Step_2), Math.round(chartInfo[3].ecolo_instcaps_Step_2) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_3), Math.round(chartInfo[3].ecolo_instcaps_Step_3) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_4), Math.round(chartInfo[3].ecolo_instcaps_Step_4) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_5), Math.round(chartInfo[3].ecolo_instcaps_Step_5) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_6), Math.round(chartInfo[3].ecolo_instcaps_Step_6) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_7), Math.round(chartInfo[3].ecolo_instcaps_Step_7) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_8), Math.round(chartInfo[3].ecolo_instcaps_Step_8) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_1) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_2) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_2) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_3) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_3) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_4) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_4) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_5) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_5) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_6) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_6)+ ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_7) + 'MW'
    },{
        y:chartInfo[3].ecolo_instcaps_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_7) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_8) + ' MW'
    },{
        y:chartInfo[3].ecolo_instcaps_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_8) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Max_val) + ' MW'
    },
    null]
    }]

});
allchart8  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-8',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[3].econo_instcaps_Min_val)+' - '+ Math.round(chartInfo[3].econo_instcaps_Step_2), Math.round(chartInfo[3].econo_instcaps_Step_2) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_3), Math.round(chartInfo[3].econo_instcaps_Step_3) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_4), Math.round(chartInfo[3].econo_instcaps_Step_4) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_5), Math.round(chartInfo[3].econo_instcaps_Step_5) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_6), Math.round(chartInfo[3].econo_instcaps_Step_6) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_7), Math.round(chartInfo[3].econo_instcaps_Step_7) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_8), Math.round(chartInfo[3].econo_instcaps_Step_8) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[3].econo_instcaps_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_1) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_2) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_2) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_3) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_3) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_4) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_4) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_5) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_5) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_6) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_6)+ ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_7) + 'MW'
    },{
        y:chartInfo[3].econo_instcaps_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_7) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_8) + ' MW'
    },{
        y:chartInfo[3].econo_instcaps_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_8) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Max_val) + ' MW'
    },
    null]
    }]

});
allchart9  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-9',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].ecolo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val),''],
       labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});
allchart10  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-10',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].econo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]
});
allchart11  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-11',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].ecolo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2), Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_3), Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_4), Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_5), Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_6), Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_7), Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_8), Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});
allchart12  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-12',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].econo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].econo_costofenergys_Step_2), Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_3), Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_4), Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_5), Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_6), Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_7), Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_8), Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});
allchart13  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-13',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[6].ecolo_footprints_Min_val)+' - '+ Math.round(chartInfo[6].ecolo_footprints_Step_2), Math.round(chartInfo[6].ecolo_footprints_Step_2) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_3), Math.round(chartInfo[6].ecolo_footprints_Step_3) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_4), Math.round(chartInfo[6].ecolo_footprints_Step_4) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_5), Math.round(chartInfo[6].ecolo_footprints_Step_5) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_6), Math.round(chartInfo[6].ecolo_footprints_Step_6) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_7), Math.round(chartInfo[6].ecolo_footprints_Step_7) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_8), Math.round(chartInfo[6].ecolo_footprints_Step_8) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_1) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_2) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_2) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_3) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_3) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_4) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_4) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_5) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_5) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_6) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_6)+ ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_7) + 'km'
    },{
        y:chartInfo[6].ecolo_footprints_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_7) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_8) + ' km'
    },{
        y:chartInfo[6].ecolo_footprints_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_8) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Max_val) + ' km'
    },
    null]
    }]

});
allchart14  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-14',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[6].econo_footprints_Min_val)+' - '+ Math.round(chartInfo[6].econo_footprints_Step_2), Math.round(chartInfo[6].econo_footprints_Step_2) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_3), Math.round(chartInfo[6].econo_footprints_Step_3) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_4), Math.round(chartInfo[6].econo_footprints_Step_4) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_5), Math.round(chartInfo[6].econo_footprints_Step_5) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_6), Math.round(chartInfo[6].econo_footprints_Step_6) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_7), Math.round(chartInfo[6].econo_footprints_Step_7) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_8), Math.round(chartInfo[6].econo_footprints_Step_8) + ' - ' + Math.round(chartInfo[6].econo_footprints_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[6].econo_footprints_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_1) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_2) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_2) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_3) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_3) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_4) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_4) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_5) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_5) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_6) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_6)+ ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_7) + 'km'
    },{
        y:chartInfo[6].econo_footprints_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_7) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_8) + ' km'
    },{
        y:chartInfo[6].econo_footprints_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_8) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Max_val) + ' km'
    },
    null]
    }]

}); 
    allchart15  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-15',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[7].ecolo_costperyears_Min_val/1000000)+' - '+ Math.round(chartInfo[7].ecolo_costperyears_Step_2/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_2/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_3/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_3/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_4/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_4/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_5/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_5/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_6/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_6/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_7/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_7/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_8/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_8/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Max_val/1000000),''],
       
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_1) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_2) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_2) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_3) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_3) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_4) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_4) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_5) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_5) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_6) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_6)+ ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_7) + '$'
    },{
        y:chartInfo[7].ecolo_costperyears_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_7) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_8) + ' $'
    },{
        y:chartInfo[7].ecolo_costperyears_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_8) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Max_val) + ' $'
    },
    null]
    }]

});
allchart16  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-16',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[7].econo_costperyears_Min_val/1000000)+' - '+ Math.round(chartInfo[7].econo_costperyears_Step_2/1000000), Math.round(chartInfo[7].econo_costperyears_Step_2/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_3/1000000), Math.round(chartInfo[7].econo_costperyears_Step_3/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_4/1000000), Math.round(chartInfo[7].econo_costperyears_Step_4/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_5/1000000), Math.round(chartInfo[7].econo_costperyears_Step_5/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_6/1000000), Math.round(chartInfo[7].econo_costperyears_Step_6/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_7/1000000), Math.round(chartInfo[7].econo_costperyears_Step_7/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_8/1000000), Math.round(chartInfo[7].econo_costperyears_Step_8/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Max_val/1000000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[7].econo_costperyears_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_1) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_2) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_2) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_3) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_3) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_4) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_4) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_5) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_5) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_6) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_6)+ ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_7) + '$'
    },{
        y:chartInfo[7].econo_costperyears_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_7) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_8) + ' $'
    },{
        y:chartInfo[7].econo_costperyears_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_8) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Max_val) + ' $'
    },
    null]
    }]

});
}// end of all charts
        drawAllCharts();
      });
                    singleEcoloWithCharts.fail(function( jqXHR, textStatus ) {
                      console.log( "Request failed: " + textStatus );
                    }); 
                        /* Go to "single- ecolo-dis-yes-tbl" */
                    } // End of if model->ecolo->single->withDis
                    if (!isModelWithDis) { 
                        selectedETarget = selectedETargetNum + "_" + selectedETargetStr;
                        eTargetQuicInfo = selectedETargetStr;
                        var qdata = {
                            token: tok,
                            eTraget: selectedETarget,
                            animal: selectedSingleAnimal,
                            balanceType: selectedBalanceType
                        };
                        var singleEcoloWithoutResult = $.ajax({
                            type: "POST",
                            url: "assets/app/singleEcoloWithoutResult.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                            },
                            success: function() {
                            
                            }
                        });
                        singleEcoloWithoutResult.done(function(resInfo) {
                         $('#result-col').html(resInfo[0].Col);   
                         $('#result-col-over').html(resInfo[0].Col_Over);  
                            
                        }); 
                        singleEcoloWithoutResult.fail(function(jqXHR, textStatus) {
                            console.log("Request failed: " + textStatus);
                        });
                        var singleEcoloWithOut = $.ajax({
                            type: "POST",
                            url: "assets/app/singleEcoloWithOut.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                                $('#query-wait-mask').css('display', 'block');
                                singleEcoloWithOutLyr.id = 'sewo';
                                currentLayer = 'sewo';
                                singleEcoloWithOutLyr.setVisibleLayers([selectedLayer]);
                                map.addLayer(singleEcoloWithOutLyr);
                                specieLayer = map.getLayer("sewo");
                                $('.ecolo-selected-E-Target').html(fNum(selectedETargetStr)+ ' GWh/yr');
                                $('.econo-selected-E-Target').html(fNum(selectedETargetStr)+ ' GWh/yr');
                                $('.ecolo-selected-ROR').html(txtRorPriorities);
                                $('.econo-selected-ROR').html(txtRorPriorities);
                            },
                            success: function() {
                                $('#query-wait-mask').css('display', 'none');
                            }
                        });

                        singleEcoloWithOut.done(function(mapInfo) {
                         numEcoloProjects = mapInfo.length;   
                        var arr = [];
                        $.each(mapInfo, function(i,v) {
                                arr.push($.map(v, function(v1) {
                                return v1;
                            }));
                        });
                        allDataTbl.clear().rows.add(arr).draw();
                            
                        $("#total-your-model").html(mapInfo.length);    
                        $("#projects-legend").animate({left: "25px"});
                        drawPoints(mapInfo);
                        addClusters(mapInfo);
                        clusterLayer.setVisibility(false);
                        $('input:checkbox[name=clusterPoints]').on('change', function () {
                        if ($(this).is(':checked')) {
                        $('.esriPopup .contentPane').css('min-height', '230px');
                        map.infoWindow.hide();
                        clusterLayer.setVisibility(true);       
                        layer1.setVisibility(false);       
                       
                        } else {
                        $('.esriPopup .contentPane').css('min-height', '340px');
                        map.infoWindow.hide();
                        clusterLayer.setVisibility(false);
                        layer1.setVisibility(true);     
                        }
                        });   
                        }); 
                        singleEcoloWithOut.fail(function(jqXHR, textStatus) {
                            console.log("Request failed: " + textStatus);
                        });
                        // Chartting
                       var singleEcoloWithOutCharts = $.ajax({
                            type: "POST",
                            url: "assets/app/chartSingleEcoloWithOut.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                                $('#chart-loader').html('<i class="fa fa-cog fa-spin"></i>');
                            },
                            success: function() {
                                $('#chart-loader').html('<i class="fa fa-bar-chart"></i>');
                                $('#chart-view-btn').removeClass('disabled');
                                $('#add-to-compare').removeClass('disabled');
                            }
                        });
 singleEcoloWithOutCharts.done(function(chartInfo) {
     numEconoProjects = chartInfo[0].econo_roads_Total_val;
    var ecoloInfoTable = '- Energy Target: <strong>'+ eTargetQuicInfo+' GWh/yr </strong> <br /> - Run of River Priorities: <br /> <strong>&nbsp;&nbsp;&nbsp;'+ txtRorPriorities+' </strong> <br /> - Species: <strong>'+ selectedAnimaQuicInfo +' </strong> <br /> - Disturbance: <strong>'+ selectedDistQuicInfo +'</strong> <br /> - Slider: <strong>'+ selectedSliderQuicInfo +'</strong>';                 
          compareData[0]  = "";
          compareData[2]  = fNum((chartInfo[0].ecolo_roads_Sum_val).toFixed(2));                
          compareData[3]  = fNum((chartInfo[1].ecolo_powerlines_Sum_val).toFixed(2));
          compareData[4]  = fNum((chartInfo[2].ecolo_penstocks_Sum_val/1000).toFixed(2));
          compareData[5]  = fNum((chartInfo[3].ecolo_instcaps_Sum_val).toFixed(2));
          compareData[6]  = fNum((chartInfo[4].ecolo_annualFirmEnergys_Sum_val).toFixed(2));
          compareData[7]  = fNum((chartInfo[5].ecolo_costofenergys_Sum_val).toFixed(2));
          compareData[8]  = fNum((chartInfo[6].ecolo_footprints_Sum_val).toFixed(2));
          compareData[9]  = fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2));
          compareData[10] = '<button type="button" class="btn btn-default btn-xs btn-rwo-info" data-container="body" data-toggle="popover" data-placement="top" data-content="'+ecoloInfoTable+'"> <i class="fa fa-question"></i></button>';           
          compareData[11] = '<button type="button" class="btn btn-default btn-xs remove-row" data-toggle="modal" data-target="#deleteModal"><i class="fa fa-minus"></i></button>';           
          compareData[12] = '<button type="button" class="btn btn-default btn-xs add-row-db"><i class="fa fa-plus"></i></button>';     
$('.total-econo-model').text(chartInfo[0].econo_roads_Total_val);
$('#ecolo-proj').text(chartInfo[0].ecolo_roads_Total_val);
$('#econo-proj').text(chartInfo[0].econo_roads_Total_val);
$('#ecolo-road-sum-1, #ecolo-road-sum-2').text(fNum((chartInfo[0].ecolo_roads_Sum_val).toFixed(2)));
$('#econo-road-sum-1, #econo-road-sum-2').text(fNum((chartInfo[0].econo_roads_Sum_val).toFixed(2)));
$('#ecolo-powerlines-sum, #ecolo-powerline-sum-2').text(fNum((chartInfo[1].ecolo_powerlines_Sum_val).toFixed(2)));
$('#econo-powerlines-sum, #econo-powerline-sum-2').text(fNum((chartInfo[1].econo_powerlines_Sum_val).toFixed(2)));
$('#ecolo-penstocks-sum, #ecolo-penstock-sum-2').text(fNum((chartInfo[2].ecolo_penstocks_Sum_val/1000).toFixed(2)));
$('#econo-penstocks-sum, #econo-penstock-sum-2').text(fNum((chartInfo[2].econo_penstocks_Sum_val/1000).toFixed(2)));
$('#ecolo-instcaps-sum, #ecolo-instCap-sum-2').text(fNum((chartInfo[3].ecolo_instcaps_Sum_val).toFixed(2)));
$('#econo-instcaps-sum, #econo-instCap-sum-2').text(fNum((chartInfo[3].econo_instcaps_Sum_val).toFixed(2)));
$('#ecolo-annualFirmEnergys-sum, #ecolo-annFirEnergy-sum-2').text(fNum((chartInfo[4].ecolo_annualFirmEnergys_Sum_val).toFixed(2)));
$('#econo-annualFirmEnergys-sum, #econo-annFirEnergy-sum-2').text(fNum((chartInfo[4].econo_annualFirmEnergys_Sum_val).toFixed(2)));
$('#ecolo-costofenergys-sum, #ecolo-costOfEnergey-sum-2').text(fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2)));
$('#econo-costofenergys-sum, #econo-costOfEnergey-sum-2').text(fNum((chartInfo[7].econo_costperyears_Sum_val/1000000).toFixed(2)));
$('#ecolo-footprints-sum, #ecolo-footprint-sum-2').text(fNum((chartInfo[6].ecolo_footprints_Sum_val).toFixed(2)));
$('#econo-footprints-sum, #econo-footprint-sum-2').text(fNum((chartInfo[6].econo_footprints_Sum_val).toFixed(2)));
$('#ecolo-costperyears-sum, #ecolo-costPerYear-sum-2').text(fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2)));
$('#econo-costperyears-sum, #econo-costPerYear-sum-2').text(fNum((chartInfo[7].econo_costperyears_Sum_val/1000000).toFixed(2)));
       
function drawRoadCharts(){
chart1  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-1',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
            symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Road Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].ecolo_roads_Min_val)+' - '+ Math.round(chartInfo[0].ecolo_roads_Step_2), Math.round(chartInfo[0].ecolo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_3), Math.round(chartInfo[0].ecolo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_4), Math.round(chartInfo[0].ecolo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_5), Math.round(chartInfo[0].ecolo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_6), Math.round(chartInfo[0].ecolo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_7), Math.round(chartInfo[0].ecolo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_8), Math.round(chartInfo[0].ecolo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
            return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            },
         events: {
            legendItemClick: function () {
                return false; 
            }
        }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].ecolo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Max_val) + ' km'
    },
    null]
    }]
});
chart2  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-2',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Road Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].econo_roads_Min_val)+' - '+ Math.round(chartInfo[0].econo_roads_Step_2), Math.round(chartInfo[0].econo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_3), Math.round(chartInfo[0].econo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_4), Math.round(chartInfo[0].econo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_5), Math.round(chartInfo[0].econo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_6), Math.round(chartInfo[0].econo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_7), Math.round(chartInfo[0].econo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_8), Math.round(chartInfo[0].econo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].econo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
               return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].econo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Max_val) + ' km'
    },
    null]
    }]

});

}//end of Road Charts
         drawRoadCharts();
function drawPowerlineCharts(){
chart3  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-3',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Powerline Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].ecolo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2), Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_3), Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_4), Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_5), Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_6), Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_7), Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_8), Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});
chart4  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-4',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Powerline Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].econo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].econo_powerlines_Step_2), Math.round(chartInfo[1].econo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_3), Math.round(chartInfo[1].econo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_4), Math.round(chartInfo[1].econo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_5), Math.round(chartInfo[1].econo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_6), Math.round(chartInfo[1].econo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_7), Math.round(chartInfo[1].econo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_8), Math.round(chartInfo[1].econo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].econo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawPowerlineCharts();
function drawPenstocksCharts(){
chart5  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-5',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Penstock Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].ecolo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Max_val/1000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_1/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000)+ ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + 'km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Max_val/1000) + ' km'
    },
    null]
    }]

});
chart6  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-6',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Penstock Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].econo_penstocks_Min_val/1000).toFixed(1)+' - '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000).toFixed(1), Math.round(chartInfo[2].econo_penstocks_Step_2/1000).toFixed(1) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_3/1000).toFixed(1), Math.round(chartInfo[2].econo_penstocks_Step_3/1000).toFixed(1) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_4/1000).toFixed(1), Math.round(chartInfo[2].econo_penstocks_Step_4/1000).toFixed(1) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_5/1000).toFixed(1), Math.round(chartInfo[2].econo_penstocks_Step_5/1000).toFixed(1) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_6/1000).toFixed(1), Math.round(chartInfo[2].econo_penstocks_Step_6/1000).toFixed(1) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_7/1000).toFixed(1), Math.round(chartInfo[2].econo_penstocks_Step_7/1000).toFixed(1) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_8/1000).toFixed(1), Math.round(chartInfo[2].econo_penstocks_Step_8/1000).toFixed(1) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Max_val/1000).toFixed(1),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].econo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_1/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_6/1000)+ ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + 'km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Max_val/1000) + ' km'
    },
    null]
    }]

});

}//end of Penstocks Charts
         drawPenstocksCharts();
function drawannualFirmEnergysCharts(){
chart9  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-9',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Annual Firm Energy (GWh/yr)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].ecolo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});
chart10  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-10',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Annual Firm Energy (GWh/yr)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].econo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawannualFirmEnergysCharts();
function drawcostofenergysCharts(){
chart11  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-11',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Cost ($/MWh)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].ecolo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2), Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_3), Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_4), Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_5), Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_6), Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_7), Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_8), Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});
chart12  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-12',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Cost ($/MWh)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].econo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].econo_costofenergys_Step_2), Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_3), Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_4), Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_5), Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_6), Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_7), Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_8), Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawcostofenergysCharts();
function drawAllCharts(){
    allchart1  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-1',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].ecolo_roads_Min_val)+' - '+ Math.round(chartInfo[0].ecolo_roads_Step_2), Math.round(chartInfo[0].ecolo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_3), Math.round(chartInfo[0].ecolo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_4), Math.round(chartInfo[0].ecolo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_5), Math.round(chartInfo[0].ecolo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_6), Math.round(chartInfo[0].ecolo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_7), Math.round(chartInfo[0].ecolo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_8), Math.round(chartInfo[0].ecolo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Max_val),''],       
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
            return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].ecolo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Max_val) + ' km'
    },
    null]
    }]
});
allchart2  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-2',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].econo_roads_Min_val)+' - '+ Math.round(chartInfo[0].econo_roads_Step_2), Math.round(chartInfo[0].econo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_3), Math.round(chartInfo[0].econo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_4), Math.round(chartInfo[0].econo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_5), Math.round(chartInfo[0].econo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_6), Math.round(chartInfo[0].econo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_7), Math.round(chartInfo[0].econo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_8), Math.round(chartInfo[0].econo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].econo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
               return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].econo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Max_val) + ' km'
    },
    null]
    }]

});
allchart3  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-3',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].ecolo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2), Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_3), Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_4), Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_5), Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_6), Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_7), Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_8), Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});
allchart4  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-4',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].econo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].econo_powerlines_Step_2), Math.round(chartInfo[1].econo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_3), Math.round(chartInfo[1].econo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_4), Math.round(chartInfo[1].econo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_5), Math.round(chartInfo[1].econo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_6), Math.round(chartInfo[1].econo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_7), Math.round(chartInfo[1].econo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_8), Math.round(chartInfo[1].econo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].econo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});  
callchart5  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-5',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].ecolo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Max_val/1000),''],
       labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_1) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6)+ ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7) + 'km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8) + ' km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Max_val) + ' km'
    },
    null]
    }]

});
allchart6  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-6',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].econo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000), Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_3/1000), Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_4/1000), Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_5/1000), Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_6/1000), Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_7/1000), Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_8/1000), Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Max_val/1000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].econo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_1) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_2) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_2) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_3) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_3) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_4) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_4) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_5) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_5) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_6) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_6)+ ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_7) + 'km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_7) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_8) + ' km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_8) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Max_val) + ' km'
    },
    null]
    }]

}); 
    allchart7  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-7',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[3].ecolo_instcaps_Min_val)+' - '+ Math.round(chartInfo[3].ecolo_instcaps_Step_2), Math.round(chartInfo[3].ecolo_instcaps_Step_2) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_3), Math.round(chartInfo[3].ecolo_instcaps_Step_3) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_4), Math.round(chartInfo[3].ecolo_instcaps_Step_4) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_5), Math.round(chartInfo[3].ecolo_instcaps_Step_5) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_6), Math.round(chartInfo[3].ecolo_instcaps_Step_6) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_7), Math.round(chartInfo[3].ecolo_instcaps_Step_7) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_8), Math.round(chartInfo[3].ecolo_instcaps_Step_8) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_1) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_2) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_2) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_3) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_3) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_4) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_4) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_5) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_5) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_6) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_6)+ ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_7) + 'MW'
    },{
        y:chartInfo[3].ecolo_instcaps_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_7) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_8) + ' MW'
    },{
        y:chartInfo[3].ecolo_instcaps_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_8) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Max_val) + ' MW'
    },
    null]
    }]

});
allchart8  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-8',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[3].econo_instcaps_Min_val)+' - '+ Math.round(chartInfo[3].econo_instcaps_Step_2), Math.round(chartInfo[3].econo_instcaps_Step_2) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_3), Math.round(chartInfo[3].econo_instcaps_Step_3) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_4), Math.round(chartInfo[3].econo_instcaps_Step_4) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_5), Math.round(chartInfo[3].econo_instcaps_Step_5) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_6), Math.round(chartInfo[3].econo_instcaps_Step_6) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_7), Math.round(chartInfo[3].econo_instcaps_Step_7) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_8), Math.round(chartInfo[3].econo_instcaps_Step_8) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[3].econo_instcaps_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_1) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_2) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_2) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_3) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_3) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_4) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_4) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_5) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_5) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_6) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_6)+ ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_7) + 'MW'
    },{
        y:chartInfo[3].econo_instcaps_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_7) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_8) + ' MW'
    },{
        y:chartInfo[3].econo_instcaps_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_8) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Max_val) + ' MW'
    },
    null]
    }]

});
allchart9  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-9',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].ecolo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val),''],
       labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});
allchart10  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-10',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].econo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]
});
allchart11  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-11',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].ecolo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2), Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_3), Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_4), Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_5), Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_6), Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_7), Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_8), Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});
allchart12  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-12',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].econo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].econo_costofenergys_Step_2), Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_3), Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_4), Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_5), Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_6), Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_7), Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_8), Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});
allchart13  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-13',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[6].ecolo_footprints_Min_val)+' - '+ Math.round(chartInfo[6].ecolo_footprints_Step_2), Math.round(chartInfo[6].ecolo_footprints_Step_2) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_3), Math.round(chartInfo[6].ecolo_footprints_Step_3) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_4), Math.round(chartInfo[6].ecolo_footprints_Step_4) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_5), Math.round(chartInfo[6].ecolo_footprints_Step_5) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_6), Math.round(chartInfo[6].ecolo_footprints_Step_6) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_7), Math.round(chartInfo[6].ecolo_footprints_Step_7) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_8), Math.round(chartInfo[6].ecolo_footprints_Step_8) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_1) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_2) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_2) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_3) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_3) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_4) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_4) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_5) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_5) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_6) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_6)+ ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_7) + 'km'
    },{
        y:chartInfo[6].ecolo_footprints_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_7) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_8) + ' km'
    },{
        y:chartInfo[6].ecolo_footprints_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_8) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Max_val) + ' km'
    },
    null]
    }]

});
allchart14  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-14',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[6].econo_footprints_Min_val)+' - '+ Math.round(chartInfo[6].econo_footprints_Step_2), Math.round(chartInfo[6].econo_footprints_Step_2) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_3), Math.round(chartInfo[6].econo_footprints_Step_3) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_4), Math.round(chartInfo[6].econo_footprints_Step_4) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_5), Math.round(chartInfo[6].econo_footprints_Step_5) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_6), Math.round(chartInfo[6].econo_footprints_Step_6) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_7), Math.round(chartInfo[6].econo_footprints_Step_7) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_8), Math.round(chartInfo[6].econo_footprints_Step_8) + ' - ' + Math.round(chartInfo[6].econo_footprints_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[6].econo_footprints_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_1) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_2) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_2) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_3) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_3) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_4) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_4) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_5) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_5) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_6) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_6)+ ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_7) + 'km'
    },{
        y:chartInfo[6].econo_footprints_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_7) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_8) + ' km'
    },{
        y:chartInfo[6].econo_footprints_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_8) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Max_val) + ' km'
    },
    null]
    }]

}); 
    allchart15  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-15',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[7].ecolo_costperyears_Min_val/1000000)+' - '+ Math.round(chartInfo[7].ecolo_costperyears_Step_2/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_2/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_3/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_3/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_4/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_4/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_5/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_5/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_6/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_6/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_7/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_7/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_8/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_8/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Max_val/1000000),''],
       
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_1) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_2) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_2) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_3) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_3) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_4) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_4) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_5) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_5) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_6) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_6)+ ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_7) + '$'
    },{
        y:chartInfo[7].ecolo_costperyears_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_7) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_8) + ' $'
    },{
        y:chartInfo[7].ecolo_costperyears_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_8) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Max_val) + ' $'
    },
    null]
    }]

});
allchart16  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-16',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[7].econo_costperyears_Min_val/1000000)+' - '+ Math.round(chartInfo[7].econo_costperyears_Step_2/1000000), Math.round(chartInfo[7].econo_costperyears_Step_2/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_3/1000000), Math.round(chartInfo[7].econo_costperyears_Step_3/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_4/1000000), Math.round(chartInfo[7].econo_costperyears_Step_4/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_5/1000000), Math.round(chartInfo[7].econo_costperyears_Step_5/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_6/1000000), Math.round(chartInfo[7].econo_costperyears_Step_6/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_7/1000000), Math.round(chartInfo[7].econo_costperyears_Step_7/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_8/1000000), Math.round(chartInfo[7].econo_costperyears_Step_8/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Max_val/1000000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[7].econo_costperyears_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_1) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_2) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_2) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_3) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_3) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_4) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_4) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_5) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_5) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_6) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_6)+ ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_7) + '$'
    },{
        y:chartInfo[7].econo_costperyears_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_7) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_8) + ' $'
    },{
        y:chartInfo[7].econo_costperyears_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_8) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Max_val) + ' $'
    },
    null]
    }]

});
}// end of all charts
        drawAllCharts();
      });
 
                    } // End of if model->ecolo->single->noDis
                } // End of if model->ecolo->single
                if (!isModelSingle) {
                    if (isModelWithDis) { 
                        selectedETarget = selectedETargetNum + "_" + selectedETargetStr;
                        eTargetQuicInfo = selectedETargetStr;
                        var qdata = {
                            token: tok,
                            eTraget: selectedETarget,
                            animal: selectedMultiAnimals,
                            balanceType: selectedBalanceType
                        };
                         var multiEcoloWithResult = $.ajax({
                            type: "POST",
                            url: "assets/app/multiEcoloWithResult.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                            },
                            success: function() {
                            
                            }
                        });
                        multiEcoloWithResult.done(function(resInfo) {
                         $('#result-col').html(resInfo[0].Col);   
                         $('#result-col-over').html(resInfo[0].Col_Over);   
                            
                        }); 
                        multiEcoloWithResult.fail(function(jqXHR, textStatus) {
                            console.log("Request failed: " + textStatus);
                        });
                        var multiEcoloWith = $.ajax({
                            type: "POST",
                            url: "assets/app/multiEcoloWith.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                                $('#query-wait-mask').css('display', 'block');
                                multiEcoloWithLyr.id = 'mew'; 
                                currentLayer = 'mew';
                                multiEcoloWithLyr.setVisibleLayers([selectedLayer]);
                                map.addLayer(multiEcoloWithLyr);
                                specieLayer = map.getLayer("mew");
                                $('.ecolo-selected-E-Target').html(fNum(selectedETargetStr)+ ' GWh/yr');
                                $('.econo-selected-E-Target').html(fNum(selectedETargetStr)+ ' GWh/yr');
                                $('.ecolo-selected-ROR').html(txtRorPriorities);
                                $('.econo-selected-ROR').html(txtRorPriorities);
                            },
                            success: function() {
                                $('#query-wait-mask').css('display', 'none');
                            }
                        });
                        multiEcoloWith.done(function(mapInfo) {
                        numEcoloProjects = mapInfo.length;
                        var arr = [];
                        $.each(mapInfo, function(i,v) {
                                arr.push($.map(v, function(v1) {
                                return v1;
                            }));
                        });
                        allDataTbl.clear().rows.add(arr).draw();
                            
                        $("#total-your-model").html(mapInfo.length);
                         $("#projects-legend").animate({left: "25px"});
                        drawPoints(mapInfo);
                        addClusters(mapInfo);
                        clusterLayer.setVisibility(false);
                        $('input:checkbox[name=clusterPoints]').on('change', function () {
                        if ($(this).is(':checked')) {
                        $('.esriPopup .contentPane').css('min-height', '230px');
                        map.infoWindow.hide();
                        clusterLayer.setVisibility(true);       
                        layer1.setVisibility(false);       
                       
                        } else {
                        $('.esriPopup .contentPane').css('min-height', '340px');
                        map.infoWindow.hide();
                        clusterLayer.setVisibility(false);
                        layer1.setVisibility(true);     
                        }
                        });   
                        }); //end Multi With Done
                       multiEcoloWith.fail(function(jqXHR, textStatus) {
                            console.log("Request failed: " + textStatus);
                        });
                          var multiEcoloWithCharts = $.ajax({
                            type: "POST",
                            url: "assets/app/chartMultiEcoloWith.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                                $('#chart-loader').html('<i class="fa fa-cog fa-spin"></i>');
                            },
                            success: function() {
                                $('#chart-loader').html('<i class="fa fa-bar-chart"></i>');
                                $('#chart-view-btn').removeClass('disabled');
                                $('#add-to-compare').removeClass('disabled');
                            }
                        });
                    multiEcoloWithCharts.done(function(chartInfo) {
                        numEconoProjects = chartInfo[0].econo_roads_Total_val;
var ecoloInfoTable = '- Energy Target: <strong>'+ eTargetQuicInfo+' GWh/yr </strong> <br /> - Run of River Priorities: <br /> <strong>&nbsp;&nbsp;&nbsp;'+ txtRorPriorities+' </strong> <br /> - Species: <strong>'+ selectedAnimaQuicInfo +' </strong> <br /> - Disturbance: <strong>'+ selectedDistQuicInfo +'</strong> <br /> - Slider: <strong>'+ selectedSliderQuicInfo +'</strong>';                          
          compareData[0]  = "";
          compareData[2]  = fNum((chartInfo[0].ecolo_roads_Sum_val).toFixed(2));                
          compareData[3]  = fNum((chartInfo[1].ecolo_powerlines_Sum_val).toFixed(2));
          compareData[4]  = fNum((chartInfo[2].ecolo_penstocks_Sum_val/1000).toFixed(2));
          compareData[5]  = fNum((chartInfo[3].ecolo_instcaps_Sum_val).toFixed(2));
          compareData[6]  = fNum((chartInfo[4].ecolo_annualFirmEnergys_Sum_val).toFixed(2));
          compareData[7]  = fNum((chartInfo[5].ecolo_costofenergys_Sum_val).toFixed(2));
          compareData[8]  = fNum((chartInfo[6].ecolo_footprints_Sum_val).toFixed(2));
          compareData[9]  = fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2));
          compareData[10] = '<button type="button" class="btn btn-default btn-xs btn-rwo-info" data-container="body" data-toggle="popover" data-placement="top" data-content="'+ecoloInfoTable+'"> <i class="fa fa-question"></i></button>';           
          compareData[11] = '<button type="button" class="btn btn-default btn-xs remove-row" data-toggle="modal" data-target="#deleteModal"><i class="fa fa-minus"></i></button>';           
          compareData[12] = '<button type="button" class="btn btn-default btn-xs add-row-db"><i class="fa fa-plus"></i></button>';   
                        
$('.total-econo-model').text(chartInfo[0].econo_roads_Total_val);
$('#ecolo-proj').text(chartInfo[0].ecolo_roads_Total_val);
$('#econo-proj').text(chartInfo[0].econo_roads_Total_val);
$('#ecolo-road-sum-1, #ecolo-road-sum-2').text(fNum((chartInfo[0].ecolo_roads_Sum_val).toFixed(2)));
$('#econo-road-sum-1, #econo-road-sum-2').text(fNum((chartInfo[0].econo_roads_Sum_val).toFixed(2)));
$('#ecolo-powerlines-sum, #ecolo-powerline-sum-2').text(fNum((chartInfo[1].ecolo_powerlines_Sum_val).toFixed(2)));
$('#econo-powerlines-sum, #econo-powerline-sum-2').text(fNum((chartInfo[1].econo_powerlines_Sum_val).toFixed(2)));
$('#ecolo-penstocks-sum, #ecolo-penstock-sum-2').text(fNum((chartInfo[2].ecolo_penstocks_Sum_val/1000).toFixed(2)));
$('#econo-penstocks-sum, #econo-penstock-sum-2').text(fNum((chartInfo[2].econo_penstocks_Sum_val/1000).toFixed(2)));
$('#ecolo-instcaps-sum, #ecolo-instCap-sum-2').text(fNum((chartInfo[3].ecolo_instcaps_Sum_val).toFixed(2)));
$('#econo-instcaps-sum, #econo-instCap-sum-2').text(fNum((chartInfo[3].econo_instcaps_Sum_val).toFixed(2)));
$('#ecolo-annualFirmEnergys-sum, #ecolo-annFirEnergy-sum-2').text(fNum((chartInfo[4].ecolo_annualFirmEnergys_Sum_val).toFixed(2)));
$('#econo-annualFirmEnergys-sum, #econo-annFirEnergy-sum-2').text(fNum((chartInfo[4].econo_annualFirmEnergys_Sum_val).toFixed(2)));
$('#ecolo-costofenergys-sum, #ecolo-costOfEnergey-sum-2').text(fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2)));
$('#econo-costofenergys-sum, #econo-costOfEnergey-sum-2').text(fNum((chartInfo[7].econo_costperyears_Sum_val/1000000).toFixed(2)));
$('#ecolo-footprints-sum, #ecolo-footprint-sum-2').text(fNum((chartInfo[6].ecolo_footprints_Sum_val).toFixed(2)));
$('#econo-footprints-sum, #econo-footprint-sum-2').text(fNum((chartInfo[6].econo_footprints_Sum_val).toFixed(2)));
$('#ecolo-costperyears-sum, #ecolo-costPerYear-sum-2').text(fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2)));
$('#econo-costperyears-sum, #econo-costPerYear-sum-2').text(fNum((chartInfo[7].econo_costperyears_Sum_val/1000000).toFixed(2)));
       
function drawRoadCharts(){
chart1  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-1',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
            symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Road Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].ecolo_roads_Min_val)+' - '+ Math.round(chartInfo[0].ecolo_roads_Step_2), Math.round(chartInfo[0].ecolo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_3), Math.round(chartInfo[0].ecolo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_4), Math.round(chartInfo[0].ecolo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_5), Math.round(chartInfo[0].ecolo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_6), Math.round(chartInfo[0].ecolo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_7), Math.round(chartInfo[0].ecolo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_8), Math.round(chartInfo[0].ecolo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
            return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            },
         events: {
            legendItemClick: function () {
                return false; 
            }
        }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].ecolo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Max_val) + ' km'
    },
    null]
    }]
});
chart2  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-2',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Road Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].econo_roads_Min_val)+' - '+ Math.round(chartInfo[0].econo_roads_Step_2), Math.round(chartInfo[0].econo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_3), Math.round(chartInfo[0].econo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_4), Math.round(chartInfo[0].econo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_5), Math.round(chartInfo[0].econo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_6), Math.round(chartInfo[0].econo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_7), Math.round(chartInfo[0].econo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_8), Math.round(chartInfo[0].econo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].econo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
               return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].econo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Max_val) + ' km'
    },
    null]
    }]

});

}//end of Road Charts
         drawRoadCharts();
function drawPowerlineCharts(){
chart3  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-3',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Powerline Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].ecolo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2), Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_3), Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_4), Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_5), Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_6), Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_7), Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_8), Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});
chart4  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-4',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Powerline Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].econo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].econo_powerlines_Step_2), Math.round(chartInfo[1].econo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_3), Math.round(chartInfo[1].econo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_4), Math.round(chartInfo[1].econo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_5), Math.round(chartInfo[1].econo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_6), Math.round(chartInfo[1].econo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_7), Math.round(chartInfo[1].econo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_8), Math.round(chartInfo[1].econo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].econo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawPowerlineCharts();
function drawPenstocksCharts(){
chart5  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-5',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Penstock Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].ecolo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Max_val/1000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_1/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000)+ ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + 'km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Max_val/1000) + ' km'
    },
    null]
    }]

});
chart6  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-6',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Penstock Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].econo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000), Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_3/1000), Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_4/1000), Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_5/1000), Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_6/1000), Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_7/1000), Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_8/1000), Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Max_val/1000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].econo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_1/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_6/1000)+ ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + 'km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Max_val/1000) + ' km'
    },
    null]
    }]

});

}//end of Penstocks Charts
         drawPenstocksCharts();
function drawannualFirmEnergysCharts(){
chart9  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-9',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Annual Firm Energy (GWh/yr)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].ecolo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});
chart10  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-10',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Annual Firm Energy (GWh/yr)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].econo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawannualFirmEnergysCharts();
function drawcostofenergysCharts(){
chart11  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-11',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Cost ($/MWh)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].ecolo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2), Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_3), Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_4), Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_5), Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_6), Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_7), Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_8), Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});
chart12  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-12',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Cost ($/MWh)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].econo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].econo_costofenergys_Step_2), Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_3), Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_4), Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_5), Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_6), Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_7), Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_8), Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawcostofenergysCharts();
function drawAllCharts(){
    allchart1  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-1',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].ecolo_roads_Min_val)+' - '+ Math.round(chartInfo[0].ecolo_roads_Step_2), Math.round(chartInfo[0].ecolo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_3), Math.round(chartInfo[0].ecolo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_4), Math.round(chartInfo[0].ecolo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_5), Math.round(chartInfo[0].ecolo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_6), Math.round(chartInfo[0].ecolo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_7), Math.round(chartInfo[0].ecolo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_8), Math.round(chartInfo[0].ecolo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Max_val),''],       
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
            return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].ecolo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Max_val) + ' km'
    },
    null]
    }]
});
allchart2  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-2',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].econo_roads_Min_val)+' - '+ Math.round(chartInfo[0].econo_roads_Step_2), Math.round(chartInfo[0].econo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_3), Math.round(chartInfo[0].econo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_4), Math.round(chartInfo[0].econo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_5), Math.round(chartInfo[0].econo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_6), Math.round(chartInfo[0].econo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_7), Math.round(chartInfo[0].econo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_8), Math.round(chartInfo[0].econo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].econo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
               return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].econo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Max_val) + ' km'
    },
    null]
    }]

});
allchart3  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-3',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].ecolo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2), Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_3), Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_4), Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_5), Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_6), Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_7), Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_8), Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});
allchart4  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-4',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].econo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].econo_powerlines_Step_2), Math.round(chartInfo[1].econo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_3), Math.round(chartInfo[1].econo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_4), Math.round(chartInfo[1].econo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_5), Math.round(chartInfo[1].econo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_6), Math.round(chartInfo[1].econo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_7), Math.round(chartInfo[1].econo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_8), Math.round(chartInfo[1].econo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].econo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});  
callchart5  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-5',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].ecolo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Max_val/1000),''],
       labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_1) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6)+ ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7) + 'km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8) + ' km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Max_val) + ' km'
    },
    null]
    }]

});
allchart6  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-6',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].econo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000), Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_3/1000), Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_4/1000), Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_5/1000), Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_6/1000), Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_7/1000), Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_8/1000), Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Max_val/1000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].econo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_1) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_2) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_2) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_3) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_3) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_4) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_4) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_5) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_5) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_6) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_6)+ ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_7) + 'km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_7) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_8) + ' km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_8) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Max_val) + ' km'
    },
    null]
    }]

}); 
    allchart7  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-7',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[3].ecolo_instcaps_Min_val)+' - '+ Math.round(chartInfo[3].ecolo_instcaps_Step_2), Math.round(chartInfo[3].ecolo_instcaps_Step_2) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_3), Math.round(chartInfo[3].ecolo_instcaps_Step_3) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_4), Math.round(chartInfo[3].ecolo_instcaps_Step_4) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_5), Math.round(chartInfo[3].ecolo_instcaps_Step_5) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_6), Math.round(chartInfo[3].ecolo_instcaps_Step_6) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_7), Math.round(chartInfo[3].ecolo_instcaps_Step_7) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_8), Math.round(chartInfo[3].ecolo_instcaps_Step_8) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_1) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_2) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_2) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_3) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_3) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_4) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_4) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_5) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_5) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_6) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_6)+ ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_7) + 'MW'
    },{
        y:chartInfo[3].ecolo_instcaps_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_7) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_8) + ' MW'
    },{
        y:chartInfo[3].ecolo_instcaps_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_8) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Max_val) + ' MW'
    },
    null]
    }]

});
allchart8  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-8',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[3].econo_instcaps_Min_val)+' - '+ Math.round(chartInfo[3].econo_instcaps_Step_2), Math.round(chartInfo[3].econo_instcaps_Step_2) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_3), Math.round(chartInfo[3].econo_instcaps_Step_3) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_4), Math.round(chartInfo[3].econo_instcaps_Step_4) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_5), Math.round(chartInfo[3].econo_instcaps_Step_5) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_6), Math.round(chartInfo[3].econo_instcaps_Step_6) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_7), Math.round(chartInfo[3].econo_instcaps_Step_7) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_8), Math.round(chartInfo[3].econo_instcaps_Step_8) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[3].econo_instcaps_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_1) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_2) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_2) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_3) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_3) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_4) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_4) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_5) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_5) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_6) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_6)+ ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_7) + 'MW'
    },{
        y:chartInfo[3].econo_instcaps_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_7) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_8) + ' MW'
    },{
        y:chartInfo[3].econo_instcaps_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_8) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Max_val) + ' MW'
    },
    null]
    }]

});
allchart9  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-9',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].ecolo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val),''],
       labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});
allchart10  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-10',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].econo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]
});
allchart11  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-11',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].ecolo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2), Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_3), Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_4), Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_5), Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_6), Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_7), Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_8), Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});
allchart12  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-12',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].econo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].econo_costofenergys_Step_2), Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_3), Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_4), Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_5), Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_6), Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_7), Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_8), Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});
allchart13  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-13',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[6].ecolo_footprints_Min_val)+' - '+ Math.round(chartInfo[6].ecolo_footprints_Step_2), Math.round(chartInfo[6].ecolo_footprints_Step_2) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_3), Math.round(chartInfo[6].ecolo_footprints_Step_3) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_4), Math.round(chartInfo[6].ecolo_footprints_Step_4) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_5), Math.round(chartInfo[6].ecolo_footprints_Step_5) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_6), Math.round(chartInfo[6].ecolo_footprints_Step_6) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_7), Math.round(chartInfo[6].ecolo_footprints_Step_7) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_8), Math.round(chartInfo[6].ecolo_footprints_Step_8) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_1) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_2) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_2) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_3) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_3) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_4) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_4) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_5) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_5) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_6) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_6)+ ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_7) + 'km'
    },{
        y:chartInfo[6].ecolo_footprints_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_7) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_8) + ' km'
    },{
        y:chartInfo[6].ecolo_footprints_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_8) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Max_val) + ' km'
    },
    null]
    }]

});
allchart14  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-14',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[6].econo_footprints_Min_val)+' - '+ Math.round(chartInfo[6].econo_footprints_Step_2), Math.round(chartInfo[6].econo_footprints_Step_2) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_3), Math.round(chartInfo[6].econo_footprints_Step_3) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_4), Math.round(chartInfo[6].econo_footprints_Step_4) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_5), Math.round(chartInfo[6].econo_footprints_Step_5) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_6), Math.round(chartInfo[6].econo_footprints_Step_6) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_7), Math.round(chartInfo[6].econo_footprints_Step_7) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_8), Math.round(chartInfo[6].econo_footprints_Step_8) + ' - ' + Math.round(chartInfo[6].econo_footprints_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[6].econo_footprints_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_1) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_2) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_2) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_3) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_3) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_4) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_4) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_5) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_5) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_6) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_6)+ ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_7) + 'km'
    },{
        y:chartInfo[6].econo_footprints_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_7) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_8) + ' km'
    },{
        y:chartInfo[6].econo_footprints_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_8) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Max_val) + ' km'
    },
    null]
    }]

}); 
    allchart15  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-15',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[7].ecolo_costperyears_Min_val/1000000)+' - '+ Math.round(chartInfo[7].ecolo_costperyears_Step_2/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_2/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_3/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_3/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_4/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_4/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_5/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_5/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_6/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_6/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_7/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_7/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_8/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_8/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Max_val/1000000),''],
       
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_1) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_2) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_2) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_3) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_3) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_4) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_4) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_5) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_5) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_6) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_6)+ ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_7) + '$'
    },{
        y:chartInfo[7].ecolo_costperyears_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_7) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_8) + ' $'
    },{
        y:chartInfo[7].ecolo_costperyears_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_8) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Max_val) + ' $'
    },
    null]
    }]

});
allchart16  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-16',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[7].econo_costperyears_Min_val/1000000)+' - '+ Math.round(chartInfo[7].econo_costperyears_Step_2/1000000), Math.round(chartInfo[7].econo_costperyears_Step_2/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_3/1000000), Math.round(chartInfo[7].econo_costperyears_Step_3/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_4/1000000), Math.round(chartInfo[7].econo_costperyears_Step_4/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_5/1000000), Math.round(chartInfo[7].econo_costperyears_Step_5/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_6/1000000), Math.round(chartInfo[7].econo_costperyears_Step_6/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_7/1000000), Math.round(chartInfo[7].econo_costperyears_Step_7/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_8/1000000), Math.round(chartInfo[7].econo_costperyears_Step_8/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Max_val/1000000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[7].econo_costperyears_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_1) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_2) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_2) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_3) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_3) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_4) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_4) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_5) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_5) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_6) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_6)+ ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_7) + '$'
    },{
        y:chartInfo[7].econo_costperyears_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_7) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_8) + ' $'
    },{
        y:chartInfo[7].econo_costperyears_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_8) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Max_val) + ' $'
    },
    null]
    }]

});
}// end of all charts
        drawAllCharts();
      });
                    multiEcoloWithCharts.fail(function( jqXHR, textStatus ) {
                      console.log( "Request failed: " + textStatus );
                    }); 
                      } // End of if model->ecolo->multi->withDis
                    if (!isModelWithDis) { 
                        selectedETarget = selectedETargetNum + "_" + selectedETargetStr;
                            eTargetQuicInfo = selectedETargetStr;
                        var qdata = {
                            token: tok,
                            eTraget: selectedETarget,
                            animal: selectedMultiAnimals,
                            balanceType: selectedBalanceType
                        };
                        var multiEcoloWithoutResult = $.ajax({
                            type: "POST",
                            url: "assets/app/multiEcoloWithoutResult.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                            },
                            success: function() {
                            
                            }
                        });
                        multiEcoloWithoutResult.done(function(resInfo) {
                         $('#result-col').html(resInfo[0].Col);   
                         $('#result-col-over').html(resInfo[0].Col_Over);   
                            
                        }); 
                        multiEcoloWithoutResult.fail(function(jqXHR, textStatus) {
                            console.log("Request failed: " + textStatus);
                        });
                        var multiEcoloWithOut = $.ajax({
                            type: "POST",
                            url: "assets/app/multiEcoloWithOut.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                                $('#query-wait-mask').css('display', 'block');
                                multiEcoloWithOutLyr.id = 'mewo'; 
                                currentLayer = 'mewo';
                                multiEcoloWithOutLyr.setVisibleLayers([selectedLayer]);
                                map.addLayer(multiEcoloWithOutLyr);
                                specieLayer = map.getLayer("mewo");
                                $('.ecolo-selected-E-Target').html(fNum(selectedETargetStr)+ ' GWh/yr');
                                $('.econo-selected-E-Target').html(fNum(selectedETargetStr)+ ' GWh/yr');
                                $('.ecolo-selected-ROR').html(txtRorPriorities);
                                $('.econo-selected-ROR').html(txtRorPriorities);
                            },
                            success: function() {
                                $('#query-wait-mask').css('display', 'none');
                            }
                        });
                        multiEcoloWithOut.done(function(mapInfo) {
                        numEcoloProjects = mapInfo.length;
                        var arr = [];
                        $.each(mapInfo, function(i,v) {
                                arr.push($.map(v, function(v1) {
                                return v1;
                            }));
                        });
                        allDataTbl.clear().rows.add(arr).draw();
                            
                        $("#total-your-model").html(mapInfo.length);
                         $("#projects-legend").animate({left: "25px"});
                        drawPoints(mapInfo);
                        addClusters(mapInfo);
                        clusterLayer.setVisibility(false);
                        $('input:checkbox[name=clusterPoints]').on('change', function () {
                        if ($(this).is(':checked')) {
                        $('.esriPopup .contentPane').css('min-height', '230px');
                        map.infoWindow.hide();
                        clusterLayer.setVisibility(true);       
                        layer1.setVisibility(false);       
                       
                        } else {
                        $('.esriPopup .contentPane').css('min-height', '340px');
                        map.infoWindow.hide();
                        clusterLayer.setVisibility(false);
                        layer1.setVisibility(true);     
                        }
                        });   
                        }); //end Multi With Done
                        multiEcoloWithOut.fail(function(jqXHR, textStatus) {
                            console.log("Request failed: " + textStatus);
                        });
                          var multiEcoloWithOutCharts = $.ajax({
                            type: "POST",
                            url: "assets/app/chartMultiEcoloWithOut.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                                $('#chart-loader').html('<i class="fa fa-cog fa-spin"></i>');
                            },
                            success: function() {
                                $('#chart-loader').html('<i class="fa fa-bar-chart"></i>');
                                $('#chart-view-btn').removeClass('disabled');
                                $('#add-to-compare').removeClass('disabled');
                            }
                        });
                    multiEcoloWithOutCharts.done(function(chartInfo) {
                        numEconoProjects = chartInfo[0].econo_roads_Total_val;
        var ecoloInfoTable = '- Energy Target: <strong>'+ eTargetQuicInfo+' GWh/yr </strong> <br /> - Run of River Priorities: <br /> <strong>&nbsp;&nbsp;&nbsp;'+ txtRorPriorities+' </strong> <br /> - Species: <strong>'+ selectedAnimaQuicInfo +' </strong> <br /> - Disturbance: <strong>'+ selectedDistQuicInfo +'</strong> <br /> - Slider: <strong>'+ selectedSliderQuicInfo +'</strong>';                  
          compareData[0]  = "";
          compareData[2]  = fNum((chartInfo[0].ecolo_roads_Sum_val).toFixed(2));                
          compareData[3]  = fNum((chartInfo[1].ecolo_powerlines_Sum_val).toFixed(2));
          compareData[4]  = fNum((chartInfo[2].ecolo_penstocks_Sum_val/1000).toFixed(2));
          compareData[5]  = fNum((chartInfo[3].ecolo_instcaps_Sum_val).toFixed(2));
          compareData[6]  = fNum((chartInfo[4].ecolo_annualFirmEnergys_Sum_val).toFixed(2));
          compareData[7]  = fNum((chartInfo[5].ecolo_costofenergys_Sum_val).toFixed(2));
          compareData[8]  = fNum((chartInfo[6].ecolo_footprints_Sum_val).toFixed(2));
          compareData[9]  = fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2));
          compareData[10] = '<button type="button" class="btn btn-default btn-xs btn-rwo-info" data-container="body" data-toggle="popover" data-placement="top" data-content="'+ecoloInfoTable+'"> <i class="fa fa-question"></i></button>';           
          compareData[11] = '<button type="button" class="btn btn-default btn-xs remove-row" data-toggle="modal" data-target="#deleteModal"><i class="fa fa-minus"></i></button>';           
          compareData[12] = '<button type="button" class="btn btn-default btn-xs add-row-db"><i class="fa fa-plus"></i></button>';       
$('.total-econo-model').text(chartInfo[0].econo_roads_Total_val);
$('#ecolo-proj').text(chartInfo[0].ecolo_roads_Total_val);
$('#econo-proj').text(chartInfo[0].econo_roads_Total_val);
$('#ecolo-road-sum-1, #ecolo-road-sum-2').text(fNum((chartInfo[0].ecolo_roads_Sum_val).toFixed(2)));
$('#econo-road-sum-1, #econo-road-sum-2').text(fNum((chartInfo[0].econo_roads_Sum_val).toFixed(2)));
$('#ecolo-powerlines-sum, #ecolo-powerline-sum-2').text(fNum((chartInfo[1].ecolo_powerlines_Sum_val).toFixed(2)));
$('#econo-powerlines-sum, #econo-powerline-sum-2').text(fNum((chartInfo[1].econo_powerlines_Sum_val).toFixed(2)));
$('#ecolo-penstocks-sum, #ecolo-penstock-sum-2').text(fNum((chartInfo[2].ecolo_penstocks_Sum_val/1000).toFixed(2)));
$('#econo-penstocks-sum, #econo-penstock-sum-2').text(fNum((chartInfo[2].econo_penstocks_Sum_val/1000).toFixed(2)));
$('#ecolo-instcaps-sum, #ecolo-instCap-sum-2').text(fNum((chartInfo[3].ecolo_instcaps_Sum_val).toFixed(2)));
$('#econo-instcaps-sum, #econo-instCap-sum-2').text(fNum((chartInfo[3].econo_instcaps_Sum_val).toFixed(2)));
$('#ecolo-annualFirmEnergys-sum, #ecolo-annFirEnergy-sum-2').text(fNum((chartInfo[4].ecolo_annualFirmEnergys_Sum_val).toFixed(2)));
$('#econo-annualFirmEnergys-sum, #econo-annFirEnergy-sum-2').text(fNum((chartInfo[4].econo_annualFirmEnergys_Sum_val).toFixed(2)));
$('#ecolo-costofenergys-sum, #ecolo-costOfEnergey-sum-2').text(fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2)));
$('#econo-costofenergys-sum, #econo-costOfEnergey-sum-2').text(fNum((chartInfo[7].econo_costperyears_Sum_val/1000000).toFixed(2)));
$('#ecolo-footprints-sum, #ecolo-footprint-sum-2').text(fNum((chartInfo[6].ecolo_footprints_Sum_val).toFixed(2)));
$('#econo-footprints-sum, #econo-footprint-sum-2').text(fNum((chartInfo[6].econo_footprints_Sum_val).toFixed(2)));
$('#ecolo-costperyears-sum, #ecolo-costPerYear-sum-2').text(fNum((chartInfo[7].ecolo_costperyears_Sum_val/1000000).toFixed(2)));
$('#econo-costperyears-sum, #econo-costPerYear-sum-2').text(fNum((chartInfo[7].econo_costperyears_Sum_val/1000000).toFixed(2)));
       
function drawRoadCharts(){
chart1  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-1',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
            symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Road Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].ecolo_roads_Min_val)+' - '+ Math.round(chartInfo[0].ecolo_roads_Step_2), Math.round(chartInfo[0].ecolo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_3), Math.round(chartInfo[0].ecolo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_4), Math.round(chartInfo[0].ecolo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_5), Math.round(chartInfo[0].ecolo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_6), Math.round(chartInfo[0].ecolo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_7), Math.round(chartInfo[0].ecolo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_8), Math.round(chartInfo[0].ecolo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
            return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            },
         events: {
            legendItemClick: function () {
                return false; 
            }
        }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].ecolo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Max_val) + ' km'
    },
    null]
    }]
});
chart2  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-2',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Road Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].econo_roads_Min_val)+' - '+ Math.round(chartInfo[0].econo_roads_Step_2), Math.round(chartInfo[0].econo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_3), Math.round(chartInfo[0].econo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_4), Math.round(chartInfo[0].econo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_5), Math.round(chartInfo[0].econo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_6), Math.round(chartInfo[0].econo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_7), Math.round(chartInfo[0].econo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_8), Math.round(chartInfo[0].econo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].econo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
               return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].econo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Max_val) + ' km'
    },
    null]
    }]

});

}//end of Road Charts
         drawRoadCharts();
function drawPowerlineCharts(){
chart3  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-3',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Powerline Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].ecolo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2), Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_3), Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_4), Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_5), Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_6), Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_7), Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_8), Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});
chart4  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-4',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Powerline Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].econo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].econo_powerlines_Step_2), Math.round(chartInfo[1].econo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_3), Math.round(chartInfo[1].econo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_4), Math.round(chartInfo[1].econo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_5), Math.round(chartInfo[1].econo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_6), Math.round(chartInfo[1].econo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_7), Math.round(chartInfo[1].econo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_8), Math.round(chartInfo[1].econo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].econo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawPowerlineCharts();
function drawPenstocksCharts(){
chart5  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-5',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Penstock Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].ecolo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Max_val/1000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_1/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000)+ ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + 'km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Max_val/1000) + ' km'
    },
    null]
    }]

});
chart6  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-6',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Penstock Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].econo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000), Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_3/1000), Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_4/1000), Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_5/1000), Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_6/1000), Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_7/1000), Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_8/1000), Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Max_val/1000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].econo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_1/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_6/1000)+ ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + 'km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Max_val/1000) + ' km'
    },
    null]
    }]

});

}//end of Penstocks Charts
         drawPenstocksCharts();
function drawannualFirmEnergysCharts(){
chart9  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-9',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Annual Firm Energy (GWh/yr)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].ecolo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});
chart10  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-10',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Annual Firm Energy (GWh/yr)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].econo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawannualFirmEnergysCharts();
function drawcostofenergysCharts(){
chart11  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-11',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Cost ($/MWh)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].ecolo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2), Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_3), Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_4), Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_5), Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_6), Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_7), Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_8), Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});
chart12  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-12',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Cost ($/MWh)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].econo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].econo_costofenergys_Step_2), Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_3), Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_4), Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_5), Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_6), Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_7), Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_8), Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawcostofenergysCharts();
function drawAllCharts(){
    allchart1  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-1',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].ecolo_roads_Min_val)+' - '+ Math.round(chartInfo[0].ecolo_roads_Step_2), Math.round(chartInfo[0].ecolo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_3), Math.round(chartInfo[0].ecolo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_4), Math.round(chartInfo[0].ecolo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_5), Math.round(chartInfo[0].ecolo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_6), Math.round(chartInfo[0].ecolo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_7), Math.round(chartInfo[0].ecolo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Step_8), Math.round(chartInfo[0].ecolo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].ecolo_roads_Max_val),''],       
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
            return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].ecolo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].ecolo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].ecolo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].ecolo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].ecolo_roads_Max_val) + ' km'
    },
    null]
    }]
});
allchart2  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-2',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].econo_roads_Min_val)+' - '+ Math.round(chartInfo[0].econo_roads_Step_2), Math.round(chartInfo[0].econo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_3), Math.round(chartInfo[0].econo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_4), Math.round(chartInfo[0].econo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_5), Math.round(chartInfo[0].econo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_6), Math.round(chartInfo[0].econo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_7), Math.round(chartInfo[0].econo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_8), Math.round(chartInfo[0].econo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].econo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
               return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].econo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_1) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_6)+ ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_7) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' & ≤ '+ Math.round(chartInfo[0].econo_roads_Max_val) + ' km'
    },
    null]
    }]

});
allchart3  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-3',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].ecolo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2), Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_3), Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_4), Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_5), Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_6), Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_7), Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Step_8), Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].ecolo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].ecolo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].ecolo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].ecolo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].ecolo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});
allchart4  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-4',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].econo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].econo_powerlines_Step_2), Math.round(chartInfo[1].econo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_3), Math.round(chartInfo[1].econo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_4), Math.round(chartInfo[1].econo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_5), Math.round(chartInfo[1].econo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_6), Math.round(chartInfo[1].econo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_7), Math.round(chartInfo[1].econo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_8), Math.round(chartInfo[1].econo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].econo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_1) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_6)+ ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' & ≤ '+ Math.round(chartInfo[1].econo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});  
callchart5  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-5',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].ecolo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000), Math.round(chartInfo[2].ecolo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].ecolo_penstocks_Max_val/1000),''],
       labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_1) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_2) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_3) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_4) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_5) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6) + ' km'
    }, {
        y:chartInfo[2].ecolo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_6)+ ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7) + 'km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_7) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8) + ' km'
    },{
        y:chartInfo[2].ecolo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].ecolo_penstocks_Step_8) + ' & ≤ '+ Math.round(chartInfo[2].ecolo_penstocks_Max_val) + ' km'
    },
    null]
    }]

});
allchart6  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-6',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].econo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000), Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_3/1000), Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_4/1000), Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_5/1000), Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_6/1000), Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_7/1000), Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_8/1000), Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Max_val/1000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].econo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_1) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_2) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_2) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_3) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_3) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_4) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_4) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_5) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_5) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_6) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_6)+ ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_7) + 'km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_7) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Step_8) + ' km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_8) + ' & ≤ '+ Math.round(chartInfo[2].econo_penstocks_Max_val) + ' km'
    },
    null]
    }]

}); 
    allchart7  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-7',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[3].ecolo_instcaps_Min_val)+' - '+ Math.round(chartInfo[3].ecolo_instcaps_Step_2), Math.round(chartInfo[3].ecolo_instcaps_Step_2) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_3), Math.round(chartInfo[3].ecolo_instcaps_Step_3) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_4), Math.round(chartInfo[3].ecolo_instcaps_Step_4) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_5), Math.round(chartInfo[3].ecolo_instcaps_Step_5) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_6), Math.round(chartInfo[3].ecolo_instcaps_Step_6) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_7), Math.round(chartInfo[3].ecolo_instcaps_Step_7) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Step_8), Math.round(chartInfo[3].ecolo_instcaps_Step_8) + ' - ' + Math.round(chartInfo[3].ecolo_instcaps_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_1) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_2) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_2) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_3) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_3) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_4) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_4) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_5) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_5) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_6) + ' MW'
    }, {
        y:chartInfo[3].ecolo_instcaps_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_6)+ ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_7) + 'MW'
    },{
        y:chartInfo[3].ecolo_instcaps_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_7) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Step_8) + ' MW'
    },{
        y:chartInfo[3].ecolo_instcaps_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[3].ecolo_instcaps_Step_8) + ' & ≤ '+ Math.round(chartInfo[3].ecolo_instcaps_Max_val) + ' MW'
    },
    null]
    }]

});
allchart8  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-8',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[3].econo_instcaps_Min_val)+' - '+ Math.round(chartInfo[3].econo_instcaps_Step_2), Math.round(chartInfo[3].econo_instcaps_Step_2) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_3), Math.round(chartInfo[3].econo_instcaps_Step_3) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_4), Math.round(chartInfo[3].econo_instcaps_Step_4) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_5), Math.round(chartInfo[3].econo_instcaps_Step_5) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_6), Math.round(chartInfo[3].econo_instcaps_Step_6) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_7), Math.round(chartInfo[3].econo_instcaps_Step_7) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_8), Math.round(chartInfo[3].econo_instcaps_Step_8) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[3].econo_instcaps_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_1) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_2) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_2) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_3) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_3) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_4) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_4) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_5) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_5) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_6) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_6)+ ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_7) + 'MW'
    },{
        y:chartInfo[3].econo_instcaps_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_7) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Step_8) + ' MW'
    },{
        y:chartInfo[3].econo_instcaps_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_8) + ' & ≤ '+ Math.round(chartInfo[3].econo_instcaps_Max_val) + ' MW'
    },
    null]
    }]

});
allchart9  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-9',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].ecolo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val),''],
       labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].ecolo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].ecolo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});
allchart10  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-10',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].econo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]
});
allchart11  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-11',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].ecolo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2), Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_3), Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_4), Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_5), Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_6), Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_7), Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Step_8), Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].ecolo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].ecolo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].ecolo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].ecolo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});
allchart12  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-12',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].econo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].econo_costofenergys_Step_2), Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_3), Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_4), Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_5), Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_6), Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_7), Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_8), Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_1) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_6)+ ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' & ≤ '+ Math.round(chartInfo[5].econo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});
allchart13  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-13',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[6].ecolo_footprints_Min_val)+' - '+ Math.round(chartInfo[6].ecolo_footprints_Step_2), Math.round(chartInfo[6].ecolo_footprints_Step_2) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_3), Math.round(chartInfo[6].ecolo_footprints_Step_3) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_4), Math.round(chartInfo[6].ecolo_footprints_Step_4) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_5), Math.round(chartInfo[6].ecolo_footprints_Step_5) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_6), Math.round(chartInfo[6].ecolo_footprints_Step_6) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_7), Math.round(chartInfo[6].ecolo_footprints_Step_7) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Step_8), Math.round(chartInfo[6].ecolo_footprints_Step_8) + ' - ' + Math.round(chartInfo[6].ecolo_footprints_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_1) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_2) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_2) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_3) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_3) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_4) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_4) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_5) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_5) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_6) + ' km'
    }, {
        y:chartInfo[6].ecolo_footprints_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_6)+ ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_7) + 'km'
    },{
        y:chartInfo[6].ecolo_footprints_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_7) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Step_8) + ' km'
    },{
        y:chartInfo[6].ecolo_footprints_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[6].ecolo_footprints_Step_8) + ' & ≤ '+ Math.round(chartInfo[6].ecolo_footprints_Max_val) + ' km'
    },
    null]
    }]

});
allchart14  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-14',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[6].econo_footprints_Min_val)+' - '+ Math.round(chartInfo[6].econo_footprints_Step_2), Math.round(chartInfo[6].econo_footprints_Step_2) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_3), Math.round(chartInfo[6].econo_footprints_Step_3) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_4), Math.round(chartInfo[6].econo_footprints_Step_4) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_5), Math.round(chartInfo[6].econo_footprints_Step_5) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_6), Math.round(chartInfo[6].econo_footprints_Step_6) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_7), Math.round(chartInfo[6].econo_footprints_Step_7) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_8), Math.round(chartInfo[6].econo_footprints_Step_8) + ' - ' + Math.round(chartInfo[6].econo_footprints_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[6].econo_footprints_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_1) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_2) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_2) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_3) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_3) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_4) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_4) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_5) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_5) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_6) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_6)+ ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_7) + 'km'
    },{
        y:chartInfo[6].econo_footprints_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_7) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Step_8) + ' km'
    },{
        y:chartInfo[6].econo_footprints_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_8) + ' & ≤ '+ Math.round(chartInfo[6].econo_footprints_Max_val) + ' km'
    },
    null]
    }]

}); 
    allchart15  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-15',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[7].ecolo_costperyears_Min_val/1000000)+' - '+ Math.round(chartInfo[7].ecolo_costperyears_Step_2/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_2/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_3/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_3/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_4/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_4/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_5/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_5/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_6/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_6/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_7/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_7/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Step_8/1000000), Math.round(chartInfo[7].ecolo_costperyears_Step_8/1000000) + ' - ' + Math.round(chartInfo[7].ecolo_costperyears_Max_val/1000000),''],
       
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color: '#D9844B',
            states: {
                hover: {
                    color: '#FBAD79'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#666',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_1) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_2) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_2) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_3) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_3) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_4) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_4) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_5) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_5) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_6) + ' $'
    }, {
        y:chartInfo[7].ecolo_costperyears_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_6)+ ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_7) + '$'
    },{
        y:chartInfo[7].ecolo_costperyears_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_7) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Step_8) + ' $'
    },{
        y:chartInfo[7].ecolo_costperyears_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[7].ecolo_costperyears_Step_8) + ' & ≤ '+ Math.round(chartInfo[7].ecolo_costperyears_Max_val) + ' $'
    },
    null]
    }]

});
allchart16  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-16',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[7].econo_costperyears_Min_val/1000000)+' - '+ Math.round(chartInfo[7].econo_costperyears_Step_2/1000000), Math.round(chartInfo[7].econo_costperyears_Step_2/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_3/1000000), Math.round(chartInfo[7].econo_costperyears_Step_3/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_4/1000000), Math.round(chartInfo[7].econo_costperyears_Step_4/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_5/1000000), Math.round(chartInfo[7].econo_costperyears_Step_5/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_6/1000000), Math.round(chartInfo[7].econo_costperyears_Step_6/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_7/1000000), Math.round(chartInfo[7].econo_costperyears_Step_7/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_8/1000000), Math.round(chartInfo[7].econo_costperyears_Step_8/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Max_val/1000000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[7].econo_costperyears_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_1) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_2) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_2) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_3) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_3) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_4) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_4) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_5) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_5) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_6) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_6)+ ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_7) + '$'
    },{
        y:chartInfo[7].econo_costperyears_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_7) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Step_8) + ' $'
    },{
        y:chartInfo[7].econo_costperyears_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_8) + ' & ≤ '+ Math.round(chartInfo[7].econo_costperyears_Max_val) + ' $'
    },
    null]
    }]

});
}// end of all charts
        drawAllCharts();
      });
                    multiEcoloWithOutCharts.fail(function( jqXHR, textStatus ) {
                      console.log( "Request failed: " + textStatus );
                    }); 
                    
                    } // End of if model->ecolo->multi->nohDis
                } // End of if model->ecolo->multi
            }
            if (!isModelEcolo) { 
              $('.hide-on-econo').hide();
              $('.show-for-ecolo').hide();    
              selectedETarget = selectedETargetNum + "_" + selectedETargetStr;
               eTargetQuicInfo = selectedETargetStr;
               var econoProjects = selectedETargetStr;
                        var qdata = {
                            token: tok,
                            eTraget: selectedETarget,
                        };
                        var econoModel = $.ajax({
                            type: "POST",
                            url: "assets/app/econoMarkers.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                                $('#query-wait-mask').css('display', 'block');
                          },
                            success: function() {
                                $('#query-wait-mask').css('display', 'none');
                            }
                        });

                        econoModel.done(function(mapInfo) {
                        numEconoProjects = mapInfo.length;    
                        $('.econo-selected-E-Target').html(econoProjects + ' GWh/yr');
                        $('.econo-selected-ROR').html(txtRorPriorities); 
                        $(".total-econo-model").html(mapInfo.length);
    
                        var arr = [];
                        $.each(mapInfo, function(i,v) {
                                arr.push($.map(v, function(v1) {
                                return v1;
                        }));
                        });
                        allDataTbl.clear().rows.add(arr).draw();
                        drawPoints(mapInfo);
                        addClusters(mapInfo);
                        clusterLayer.setVisibility(false);
                        $('input:checkbox[name=clusterPoints]').on('change', function () {
                        if ($(this).is(':checked')) {
                        $('.esriPopup .contentPane').css('min-height', '230px');
                        map.infoWindow.hide();
                        clusterLayer.setVisibility(true);       
                        layer1.setVisibility(false);       
                       
                        } else {
                        $('.esriPopup .contentPane').css('min-height', '340px');
                        map.infoWindow.hide();
                        clusterLayer.setVisibility(false);
                        layer1.setVisibility(true);     
                        }
                        });   
                        }); //end econo Done

                        econoModel.fail(function(jqXHR, textStatus) {
                            console.log("Request failed: " + textStatus);
                        });
            
                              var econoCharts = $.ajax({
                            type: "POST",
                            url: "assets/app/chartEcono.php",
                            data: qdata,
                            cache: false,
                            dataType: "JSON",
                            beforeSend: function() {
                                $('#chart-loader').html('<i class="fa fa-cog fa-spin"></i>');
                            },
                            success: function() {
                                $('#chart-loader').html('<i class="fa fa-bar-chart"></i>');
                                $('#chart-view-btn').removeClass('disabled');
                                $('#add-to-compare').removeClass('disabled');
                            }
                        });
                    econoCharts.done(function(chartInfo) {
                        numEconoProjects = chartInfo[0].econo_roads_Total_val;
var econoInfoTable = '- Energy Target: <strong>'+ eTargetQuicInfo+' GWh/yr </strong> <br /> - Run of River Priorities: <br /> <strong>&nbsp;&nbsp;&nbsp;'+ txtRorPriorities+' </strong>';                      
                
          compareData[0]  = "";
          compareData[2]  = fNum((chartInfo[0].econo_roads_Sum_val).toFixed(2));                
          compareData[3]  = fNum((chartInfo[1].econo_powerlines_Sum_val).toFixed(2));
          compareData[4]  = fNum((chartInfo[2].econo_penstocks_Sum_val/1000).toFixed(2));
          compareData[5]  = fNum((chartInfo[3].econo_instcaps_Sum_val).toFixed(2));
          compareData[6]  = fNum((chartInfo[4].econo_annualFirmEnergys_Sum_val).toFixed(2));
          compareData[7]  = fNum((chartInfo[5].econo_costofenergys_Sum_val).toFixed(2));
          compareData[8]  = fNum((chartInfo[6].econo_footprints_Sum_val).toFixed(2));
          compareData[9]  = fNum((chartInfo[7].econo_costperyears_Sum_val/1000000).toFixed(2));
          compareData[10] = '<button type="button" class="btn btn-default btn-xs btn-rwo-info" data-container="body" data-toggle="popover" data-placement="top" data-content="'+econoInfoTable+'"> <i class="fa fa-question"></i></button>';           
          compareData[11] = '<button type="button" class="btn btn-default btn-xs remove-row" data-toggle="modal" data-target="#deleteModal"><i class="fa fa-minus"></i></button>';           
          compareData[12] = '<button type="button" class="btn btn-default btn-xs add-row-db"><i class="fa fa-plus"></i></button>';           

$('#econo-proj').text(chartInfo[0].econo_roads_Total_val);
$('#econo-road-sum-1, #econo-road-sum-2').text(fNum((chartInfo[0].econo_roads_Sum_val).toFixed(2)));
$('#econo-powerlines-sum, #econo-powerline-sum-2').text(fNum((chartInfo[1].econo_powerlines_Sum_val).toFixed(2)));
$('#econo-penstocks-sum, #econo-penstock-sum-2').text(fNum((chartInfo[2].econo_penstocks_Sum_val/1000).toFixed(2)));
$('#econo-instcaps-sum, #econo-instCap-sum-2').text(fNum((chartInfo[3].econo_instcaps_Sum_val).toFixed(2)));
$('#econo-annualFirmEnergys-sum, #econo-annFirEnergy-sum-2').text(fNum((chartInfo[4].econo_annualFirmEnergys_Sum_val).toFixed(2)));
$('#econo-costofenergys-sum, #econo-costOfEnergey-sum-2').text(fNum((chartInfo[7].econo_costperyears_Sum_val/1000000).toFixed(2)));
$('#econo-footprints-sum, #econo-footprint-sum-2').text(fNum((chartInfo[6].econo_footprints_Sum_val).toFixed(2)));
$('#econo-costperyears-sum, #econo-costPerYear-sum-2').text(fNum((chartInfo[7].econo_costperyears_Sum_val/1000000).toFixed(2)));
       
function drawRoadCharts(){
chart2  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-2',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Road Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].econo_roads_Min_val)+' - '+ Math.round(chartInfo[0].econo_roads_Step_2), Math.round(chartInfo[0].econo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_3), Math.round(chartInfo[0].econo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_4), Math.round(chartInfo[0].econo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_5), Math.round(chartInfo[0].econo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_6), Math.round(chartInfo[0].econo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_7), Math.round(chartInfo[0].econo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_8), Math.round(chartInfo[0].econo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].econo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
               return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].econo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_1) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_6)+ ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_7) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Max_val) + ' km'
    },
    null]
    }]

});

}//end of Road Charts
         drawRoadCharts();
function drawPowerlineCharts(){
chart4  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-4',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Powerline Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].econo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].econo_powerlines_Step_2), Math.round(chartInfo[1].econo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_3), Math.round(chartInfo[1].econo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_4), Math.round(chartInfo[1].econo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_5), Math.round(chartInfo[1].econo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_6), Math.round(chartInfo[1].econo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_7), Math.round(chartInfo[1].econo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_8), Math.round(chartInfo[1].econo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].econo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_1) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_6)+ ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawPowerlineCharts();
function drawPenstocksCharts(){
chart6  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-6',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Penstock Length (km)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].econo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000), Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_3/1000), Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_4/1000), Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_5/1000), Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_6/1000), Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_7/1000), Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_8/1000), Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Max_val/1000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].econo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_1/1000) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_6/1000)+ ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + 'km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Max_val/1000) + ' km'
    },
    null]
    }]

});

}//end of Penstocks Charts
         drawPenstocksCharts();
function drawannualFirmEnergysCharts(){
chart10  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-10',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Annual Firm Energy (GWh/yr)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].econo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_1) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6)+ ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawannualFirmEnergysCharts();
function drawcostofenergysCharts(){
chart12  = new Highcharts.Chart({

    chart: {
        renderTo: 'chart-12',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        symbolHeight: '0px' ,
        labelFormatter: function () {
            return 'Individual Cost ($/MWh)';
        }
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].econo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].econo_costofenergys_Step_2), Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_3), Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_4), Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_5), Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_6), Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_7), Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_8), Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_1) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_6)+ ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});

}//end of PowerLine Charts
         drawcostofenergysCharts();
function drawAllCharts(){
 allchart2  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-2',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[0].econo_roads_Min_val)+' - '+ Math.round(chartInfo[0].econo_roads_Step_2), Math.round(chartInfo[0].econo_roads_Step_2) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_3), Math.round(chartInfo[0].econo_roads_Step_3) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_4), Math.round(chartInfo[0].econo_roads_Step_4) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_5), Math.round(chartInfo[0].econo_roads_Step_5) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_6), Math.round(chartInfo[0].econo_roads_Step_6) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_7), Math.round(chartInfo[0].econo_roads_Step_7) + ' - ' + Math.round(chartInfo[0].econo_roads_Step_8), Math.round(chartInfo[0].econo_roads_Step_8) + ' - ' + Math.round(chartInfo[0].econo_roads_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
               return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[0].econo_roads_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_1) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_2) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_2) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_3) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_3) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_4) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_4) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_5) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_5) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_6) + ' km'
    }, {
        y:chartInfo[0].econo_roads_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_6)+ ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_7) + 'km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_7) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Step_8) + ' km'
    },{
        y:chartInfo[0].econo_roads_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[0].econo_roads_Step_8) + ' & ≤'+ Math.round(chartInfo[0].econo_roads_Max_val) + ' km'
    },
    null]
    }]

});

allchart4  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-4',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[1].econo_powerlines_Min_val)+' - '+ Math.round(chartInfo[1].econo_powerlines_Step_2), Math.round(chartInfo[1].econo_powerlines_Step_2) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_3), Math.round(chartInfo[1].econo_powerlines_Step_3) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_4), Math.round(chartInfo[1].econo_powerlines_Step_4) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_5), Math.round(chartInfo[1].econo_powerlines_Step_5) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_6), Math.round(chartInfo[1].econo_powerlines_Step_6) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_7), Math.round(chartInfo[1].econo_powerlines_Step_7) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Step_8), Math.round(chartInfo[1].econo_powerlines_Step_8) + ' - ' + Math.round(chartInfo[1].econo_powerlines_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[1].econo_powerlines_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_1) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_2) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_3) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_4) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_5) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_6) + ' km'
    }, {
        y:chartInfo[1].econo_powerlines_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_6)+ ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_7) + 'km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_7) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' km'
    },{
        y:chartInfo[1].econo_powerlines_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[1].econo_powerlines_Step_8) + ' & ≤'+ Math.round(chartInfo[1].econo_powerlines_Max_val) + ' km'
    },
    null]
    }]

});  

allchart6  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-6',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[2].econo_penstocks_Min_val/1000)+' - '+ Math.round(chartInfo[2].econo_penstocks_Step_2/1000), Math.round(chartInfo[2].econo_penstocks_Step_2/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_3/1000), Math.round(chartInfo[2].econo_penstocks_Step_3/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_4/1000), Math.round(chartInfo[2].econo_penstocks_Step_4/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_5/1000), Math.round(chartInfo[2].econo_penstocks_Step_5/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_6/1000), Math.round(chartInfo[2].econo_penstocks_Step_6/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_7/1000), Math.round(chartInfo[2].econo_penstocks_Step_7/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Step_8/1000), Math.round(chartInfo[2].econo_penstocks_Step_8/1000) + ' - ' + Math.round(chartInfo[2].econo_penstocks_Max_val/1000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[2].econo_penstocks_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_1) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_2) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_2) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_3) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_3) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_4) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_4) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_5) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_5) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_6) + ' km'
    }, {
        y:chartInfo[2].econo_penstocks_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_6)+ ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_7) + 'km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_7) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Step_8) + ' km'
    },{
        y:chartInfo[2].econo_penstocks_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[2].econo_penstocks_Step_8) + ' & ≤'+ Math.round(chartInfo[2].econo_penstocks_Max_val) + ' km'
    },
    null]
    }]

}); 
 allchart8  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-8',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[3].econo_instcaps_Min_val)+' - '+ Math.round(chartInfo[3].econo_instcaps_Step_2), Math.round(chartInfo[3].econo_instcaps_Step_2) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_3), Math.round(chartInfo[3].econo_instcaps_Step_3) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_4), Math.round(chartInfo[3].econo_instcaps_Step_4) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_5), Math.round(chartInfo[3].econo_instcaps_Step_5) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_6), Math.round(chartInfo[3].econo_instcaps_Step_6) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_7), Math.round(chartInfo[3].econo_instcaps_Step_7) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Step_8), Math.round(chartInfo[3].econo_instcaps_Step_8) + ' - ' + Math.round(chartInfo[3].econo_instcaps_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[3].econo_instcaps_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_1) + ' & ≤'+ Math.round(chartInfo[3].econo_instcaps_Step_2) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_2) + ' & ≤'+ Math.round(chartInfo[3].econo_instcaps_Step_3) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_3) + ' & ≤'+ Math.round(chartInfo[3].econo_instcaps_Step_4) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_4) + ' & ≤'+ Math.round(chartInfo[3].econo_instcaps_Step_5) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_5) + ' & ≤'+ Math.round(chartInfo[3].econo_instcaps_Step_6) + ' MW'
    }, {
        y:chartInfo[3].econo_instcaps_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_6)+ ' & ≤'+ Math.round(chartInfo[3].econo_instcaps_Step_7) + 'MW'
    },{
        y:chartInfo[3].econo_instcaps_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_7) + ' & ≤'+ Math.round(chartInfo[3].econo_instcaps_Step_8) + ' MW'
    },{
        y:chartInfo[3].econo_instcaps_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[3].econo_instcaps_Step_8) + ' & ≤'+ Math.round(chartInfo[3].econo_instcaps_Max_val) + ' MW'
    },
    null]
    }]

});

allchart10  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-10',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[4].econo_annualFirmEnergys_Min_val)+' - '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8), Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' - ' + Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_1) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_2) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_3) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_4) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_5) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6) + ' GWh/yr'
    }, {
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_6)+ ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + 'GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_7) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' GWh/yr'
    },{
        y:chartInfo[4].econo_annualFirmEnergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[4].econo_annualFirmEnergys_Step_8) + ' & ≤'+ Math.round(chartInfo[4].econo_annualFirmEnergys_Max_val) + ' GWh/yr'
    },
    null]
    }]
});

allchart12  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-12',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[5].econo_costofenergys_Min_val)+' - '+ Math.round(chartInfo[5].econo_costofenergys_Step_2), Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_3), Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_4), Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_5), Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_6), Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_7), Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Step_8), Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' - ' + Math.round(chartInfo[5].econo_costofenergys_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_1) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_2) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_3) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_4) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_5) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_6) + ' $/MWh'
    }, {
        y:chartInfo[5].econo_costofenergys_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_6)+ ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + '$/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_7) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' $/MWh'
    },{
        y:chartInfo[5].econo_costofenergys_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[5].econo_costofenergys_Step_8) + ' & ≤'+ Math.round(chartInfo[5].econo_costofenergys_Max_val) + ' $/MWh'
    },
    null]
    }]

});

allchart14  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-14',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[6].econo_footprints_Min_val)+' - '+ Math.round(chartInfo[6].econo_footprints_Step_2), Math.round(chartInfo[6].econo_footprints_Step_2) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_3), Math.round(chartInfo[6].econo_footprints_Step_3) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_4), Math.round(chartInfo[6].econo_footprints_Step_4) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_5), Math.round(chartInfo[6].econo_footprints_Step_5) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_6), Math.round(chartInfo[6].econo_footprints_Step_6) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_7), Math.round(chartInfo[6].econo_footprints_Step_7) + ' - ' + Math.round(chartInfo[6].econo_footprints_Step_8), Math.round(chartInfo[6].econo_footprints_Step_8) + ' - ' + Math.round(chartInfo[6].econo_footprints_Max_val),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[6].econo_footprints_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_1) + ' & ≤'+ Math.round(chartInfo[6].econo_footprints_Step_2) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_2) + ' & ≤'+ Math.round(chartInfo[6].econo_footprints_Step_3) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_3) + ' & ≤'+ Math.round(chartInfo[6].econo_footprints_Step_4) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_4) + ' & ≤'+ Math.round(chartInfo[6].econo_footprints_Step_5) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_5) + ' & ≤'+ Math.round(chartInfo[6].econo_footprints_Step_6) + ' km'
    }, {
        y:chartInfo[6].econo_footprints_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_6)+ ' & ≤'+ Math.round(chartInfo[6].econo_footprints_Step_7) + 'km'
    },{
        y:chartInfo[6].econo_footprints_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_7) + ' & ≤'+ Math.round(chartInfo[6].econo_footprints_Step_8) + ' km'
    },{
        y:chartInfo[6].econo_footprints_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[6].econo_footprints_Step_8) + ' & ≤'+ Math.round(chartInfo[6].econo_footprints_Max_val) + ' km'
    },
    null]
    }]

}); 
  
allchart16  = new Highcharts.Chart({

    chart: {
        renderTo: 'all-charts-16',
        backgroundColor: '#f5f5f5',
        type: 'column'
    },
    title: {
        text: ''
    },
    credits: {
        enabled: false
    },
    legend: {
        enabled: false
    },
    xAxis: {
 categories: ['',Math.round(chartInfo[7].econo_costperyears_Min_val/1000000)+' - '+ Math.round(chartInfo[7].econo_costperyears_Step_2/1000000), Math.round(chartInfo[7].econo_costperyears_Step_2/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_3/1000000), Math.round(chartInfo[7].econo_costperyears_Step_3/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_4/1000000), Math.round(chartInfo[7].econo_costperyears_Step_4/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_5/1000000), Math.round(chartInfo[7].econo_costperyears_Step_5/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_6/1000000), Math.round(chartInfo[7].econo_costperyears_Step_6/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_7/1000000), Math.round(chartInfo[7].econo_costperyears_Step_7/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Step_8/1000000), Math.round(chartInfo[7].econo_costperyears_Step_8/1000000) + ' - ' + Math.round(chartInfo[7].econo_costperyears_Max_val/1000000),''],
        labels: {
            rotation: -45
        }
    },
    yAxis: {
        title: {
            text: ''
        }
    },
        tooltip: {
        formatter: function () {
           return  'There are <strong>'+ this.y+ '</strong> Projects <br />' + (this.point.custom || '') ;
        }
    },

    plotOptions: {
        column: {
            groupPadding: 0,
            pointPadding: 0,
            borderWidth: 0,
            color:  '#3F4539',
            states: {
                hover: {
                    color: '#999'
                }
            }
        },
        series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                    color: '#999',
                
                y: 25,
                style: {
                    textShadow: false,
                  fontSize: '10px'
                }
            }
        }

    },

    series: [{
        name: '',
        data: [null, {
        y:chartInfo[7].econo_costperyears_Projects_Step_1, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_1) + ' & ≤'+ Math.round(chartInfo[7].econo_costperyears_Step_2) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_2, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_2) + ' & ≤'+ Math.round(chartInfo[7].econo_costperyears_Step_3) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_3, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_3) + ' & ≤'+ Math.round(chartInfo[7].econo_costperyears_Step_4) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_4, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_4) + ' & ≤'+ Math.round(chartInfo[7].econo_costperyears_Step_5) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_5, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_5) + ' & ≤'+ Math.round(chartInfo[7].econo_costperyears_Step_6) + ' $'
    }, {
        y:chartInfo[7].econo_costperyears_Projects_Step_6, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_6)+ ' & ≤'+ Math.round(chartInfo[7].econo_costperyears_Step_7) + '$'
    },{
        y:chartInfo[7].econo_costperyears_Projects_Step_7, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_7) + ' & ≤'+ Math.round(chartInfo[7].econo_costperyears_Step_8) + ' $'
    },{
        y:chartInfo[7].econo_costperyears_Projects_Step_8, custom: 'Between > '+ Math.round(chartInfo[7].econo_costperyears_Step_8) + ' & ≤'+ Math.round(chartInfo[7].econo_costperyears_Max_val) + ' $'
    },
    null]
    }]

});
}// end of all charts
        drawAllCharts();
      });
                    econoCharts.fail(function( jqXHR, textStatus ) {
                      console.log( "Request failed: " + textStatus );
                    }); 
            
            }// End of Model Econo
             resetModel();
             formStyleReset();
        } //End Of If is Valid query
       
    });

function resetMap(){

     $("#projects-legend").animate({left: "-300px"});
    $('input:checkbox[name=clusterPoints]').attr('checked',false);
         if(map.getLayer("sew")){ 
            map.removeLayer(singleEcoloWithLyr);   
            map.removeLayer(layer1);   
            map.removeLayer(clusterLayer);
         }
  if(map.getLayer("sewo")){ 
            map.removeLayer(singleEcoloWithOutLyr);   
            map.removeLayer(layer1);   
            map.removeLayer(clusterLayer);
         }
  if(map.getLayer("mew")){ 
            map.removeLayer(multiEcoloWithLyr);   
            map.removeLayer(layer1);   
            map.removeLayer(clusterLayer);
         }
  if(map.getLayer("mewo")){ 
            map.removeLayer(multiEcoloWithOutLyr);   
            map.removeLayer(layer1);   
            map.removeLayer(clusterLayer);
         }
  if(map.getLayer("roadslyr")){ 
            map.removeLayer(roadLayer);   
            map.removeLayer(layer1);   
            map.removeLayer(clusterLayer);
         }
  if(map.getLayer("protectlyr")){ 
            map.removeLayer(protectedLayer);   
            map.removeLayer(layer1);   
            map.removeLayer(clusterLayer);
         }
  if(map.getLayer("distlyr")){ 
            map.removeLayer(disturbLayer);   
            map.removeLayer(layer1);   
            map.removeLayer(clusterLayer);
         }
  if(map.getLayer("fishlyr")){ 
            map.removeLayer(fishLayer);   
            map.removeLayer(layer1);   
            map.removeLayer(clusterLayer);
         }
  if(map.getLayer("damlyr")){ 
            map.removeLayer(damLayer);   
            map.removeLayer(layer1);   
            map.removeLayer(clusterLayer);
         } 
if(map.getLayer("MyGL")){ 
            map.removeLayer(layer1);   
            map.removeLayer(clusterLayer);
         }
if(map.getLayer("MyGL2")){ 
            map.removeLayer(layer1);   
            map.removeLayer(clusterLayer);
         }         
        
    }
function formStyleReset(){
    $('#query-error').slideUp();
    $('.num').css("background-color", "grey");
    $('#energy-target-selector').selectpicker('val', '0');
    $("#single-animal-select").selectpicker('val', '0');
    $("#multi-animals-select").selectpicker('val', '0'); 
    $('#single-list-group').slideUp();
    $('#multi-list-group').slideUp();
    $('#with-disturb').slideUp();
    $('#balance').slideUp();
    $("#collapseOne").collapse('show');
    $("#collapseTwo").collapse('hide');
    $("#collapseThree").collapse('hide');
    $("#collapseFour").collapse('hide');
    $("#collapseFive").collapse('hide');
    $('select[name=eTargets]').val(0);
    $('input:checkbox[name=projectsWith]').attr('checked', false);
    $('input:radio[name=withDisturbance]').attr('checked', false);
    $('input:radio[name=withOverlap]').attr('checked', false);  
    $('input:radio[name=withOverlap]:eq(1)').attr('checked', true);  
    $('#balance-radios > label').removeClass('active');
    $('#balance-radios > label').eq(1).addClass('active');    
    $("#slider").slider("value", 50);  
   
  }  
 
        var txtRegExCharacter = /^\s*[a-zA-Z0-9,\s]+\s*$/;  
        var txtRegExNumber = /^\d*[0-9](|.\d*[0-9]|,\d*[0-9])?$/;
        var txtRegExShort = /^.{3,12}$/; 
        var txtRegExFake = /(.)\1{2,}/;   
function txtInput(elem) {
        var inputData = $.trim(elem.val());
        if (inputData == "") {
        $('#q-name-err').html("Please Specifiy a Name For Your Model");
        $('#q-name-err').slideDown();    
          
        }
    else if(!txtRegExShort.test(inputData)){
        $('#q-name-err').html("Name Must Be Between 3 - 12 Characters");
        $('#q-name-err').slideDown(); 
        }
        else{
            return inputData;
        }
    }      
 $('#query-name').on("mousedown", function(){
    $('#q-name-err').slideUp(); 
});   
    
    
$("#add-input-to-comapre").on("click", function(e){
     e.preventDefault();
     var proceed = true;
   if (!txtInput($('#query-name'))){proceed = false;}
     if(proceed) 
   {
       compareData[1]  = $('#query-name').val();  
       $('#compare-view-btn').removeClass('disabled');
       $('#query-name').val('');
       $('#add-to-compare-modal').modal('hide');
       addDataToCompare(compareData);
//       $("[data-toggle=popover]").popover();
       $("[data-toggle=popover]").popover({ html: true });
       compareData = [];
   }

});   
  
    
    
    $("#cancel-query").on("click", function() {
        resetModel();
        formStyleReset();
    });
    $("#query-builder").on("click", function() {
          resetMap();
         $("#chart-view-btn").addClass('disabled');
        $("#add-to-compare").addClass('disabled');
        
    });
    $(".make-new-model").on("click", function() {
          resetMap();
          resetModel();
          formStyleReset();
    });
     
    $(".reset-app").on("click", function() {
          resetMap();
          resetModel();
          formStyleReset();
        $("#chart-view-btn").addClass('disabled');
        $("#add-to-compare").addClass('disabled');
        
    });
      
    
  function drawPoints(mapInfo) {
        layer1 = new esri.layers.GraphicsLayer();
        layer1.id = "MyGL";  
        for (var i = 0; i < mapInfo.length; i++) {
        var projects = mapInfo[i];
        var project = new esri.geometry.Point(projects.Longitude, projects.Latitude);
        project = esri.geometry.geographicToWebMercator(project);
        var symbol = new esri.symbol.PictureMarkerSymbol("img/map/marker.png", 18, 18);
        var pRoad =                 Math.ceil(projects.RoadLength);
        var pPowerLine =            Math.ceil(projects.PowerLineLength);
        var pPenstock =             Math.ceil(projects.Penstock/1000);
        var pInstalledCapacity =    Math.ceil(projects.InstalledCapacity);
        var pAnnualFirmEnergy =     Math.ceil(projects.AnnualFirmEnergy);
        var pCostOfEnergy =         Math.ceil(projects.CostOfEnergy);
        var pFootprint =            Math.ceil(projects.Footprint);
        var pCostPerYear =            Math.ceil(projects.CostPerYear/1000000);
        projectInfoTemplate = new InfoTemplate();
        projectInfoTemplate.setTitle("Project Details");
        projectInfoTemplate.setContent('<div class="list-group marker-info"> <a href="#" class="list-group-item"><div class="row"><span class="col-md-9 marker-info-txt">Site ID</span><span class="col-md-3 marker-info-txt"><strong>' + projects.ProjectID + '</strong></span></div></a> <a href="#" class="list-group-item"><div class="row"><span class="col-md-9 marker-info-txt">Road Length (km)</span><span class="col-md-3 marker-info-txt"><strong>' + pRoad + '</strong></span></div></a> <a href="#" class="list-group-item"><div class="row"><span class="col-md-9 marker-info-txt">Powerline Length (km)</span><span class="col-md-3 marker-info-txt"><strong>' + pPowerLine + '</strong></span></div></a> <a href="#" class="list-group-item"><div class="row"><span class="col-md-9 marker-info-txt">Penstock (km)</span><span class="col-md-3 marker-info-txt"><strong>' + pPenstock + '</strong></span></div></a> <a href="#" class="list-group-item"><div class="row"><span class="col-md-9 marker-info-txt">Installed Capacity (MW)</span><span class="col-md-3 marker-info-txt"><strong>' + pInstalledCapacity + '</strong></span></div></a><a href="#" class="list-group-item"><div class="row"><span class="col-md-9 marker-info-txt">Annual Firm Energy (GW)</span><span class="col-md-3 marker-info-txt"><strong>' + pAnnualFirmEnergy + '</strong></span></div></a><a href="#" class="list-group-item"><div class="row"><span class="col-md-9 marker-info-txt">Energy Cost ($/MWh)</span><span class="col-md-3 marker-info-txt"><strong>' + pCostOfEnergy + '</strong></span></div></a><a href="#" class="list-group-item"><div class="row"><span class="col-md-9 marker-info-txt">Footprint (ha)</span><span class="col-md-3 marker-info-txt"><strong>' + pFootprint + '</strong></span></div></a><a href="#" class="list-group-item"><div class="row"><span class="col-md-9 marker-info-txt">Cost Per Year (M$)</span><span class="col-md-3 marker-info-txt"><strong>' + pCostPerYear + '</strong></span></div></a></div> ');
        var projectsG = new esri.Graphic(project, symbol).setInfoTemplate(projectInfoTemplate);
        layer1.add(projectsG);
        }
        map.addLayer(layer1);
        }
    
   function addClusters(mapInfo) {
    layer2 = new esri.layers.GraphicsLayer();
    var photoInfo = [];
    var wgs = new SpatialReference({
                                    "wkid": 4326
                                });

                                photoInfo.data = arrayUtils.map(mapInfo, function(p) {
                                    var latlng = new Point(parseFloat(p.Longitude), parseFloat(p.Latitude), wgs);
                                    var webMercator = webMercatorUtils.geographicToWebMercator(latlng);
    var attributes = {
         "Project ID":  p.ProjectID,
         "Road Length": p.RoadLength,
         "Powerline Length": p.PowerLineLength,
         "Penstock": p.Penstock,
         "Installed Capacity": p.InstalledCapacity,
         "Annual Firm Energy": p.AnnualFirmEnergy,
         "Cost Of Energy": p.CostOfEnergy,
         "Footprint": p.Footprint,
         "Cost Per Year": p.CostPerYear,
        
        
    };
                                    return {
                                        "x": webMercator.x,
                                        "y": webMercator.y,
                                        "attributes": attributes
                                    };
                                });
                                

            var popupTemplate = new PopupTemplate({
              "title": "Project Details",
              "fieldInfos": [{
                "fieldName": "Project ID",
                visible: true
              }, {
                "fieldName": "Road Length",
                 visible: true
              }, {
                "fieldName": "Powerline Length",
                 visible: true
              },
                            {
                "fieldName": "Penstock",
                 visible: true
              },
                             {
                "fieldName": "Installed Capacity",
                 visible: true
              },
                             {
                "fieldName": "Annual Firm Energy",
                 visible: true
              },
                             {
                "fieldName": "Cost Of Energy",
                 visible: true
              },
               {
                "fieldName": "Footprint",
                 visible: true
              },
                            {
                "fieldName": "Cost Per Year",
                 visible: true
              }]
            });
                                clusterLayer = new ClusterLayer({
                                    "data": photoInfo.data,
                                    "distance": 100,
                                    "id": "clusters",
                                    "labelColor": "#fff",
                                    "labelOffset": 10,
                                    "resolution": map.extent.getWidth() / map.width,
                                    "singleColor": "#FF3300",
                                    "singleTemplate": popupTemplate
                                });
                                clusterLayer.id = "MyGL2";  
                                var defaultSym = new SimpleMarkerSymbol().setSize(4);
                                var renderer = new ClassBreaksRenderer(defaultSym, "clusterCount");

                                var picBaseUrl = "img/map/";
 var yellow = new PictureMarkerSymbol(picBaseUrl + "bigCluster.png", 16, 16).setOffset(0, 10);
 var blue = new PictureMarkerSymbol(picBaseUrl + "smallCluaster.png", 32, 32).setOffset(0, 15);
 var green = new PictureMarkerSymbol(picBaseUrl + "medCluster.png", 48, 48).setOffset(0, 15);
 var red = new PictureMarkerSymbol(picBaseUrl + "bigCluster.png", 64, 64).setOffset(0, 8);
                                renderer.addBreak(0, 1, yellow);
                                renderer.addBreak(1, 2, blue);
                                renderer.addBreak(2, 200, green);
                                renderer.addBreak(200, 1001, red);

                                clusterLayer.setRenderer(renderer);
                                map.addLayer(clusterLayer);

                                map.on("click", cleanUp);
                                map.on("key-down", function(e) {
                                    if (e.keyCode === 27) {
                                        cleanUp();
                                    }
                                });

                            }

    function cleanUp() {
        clusterLayer.clearSingles();
    }

    function error(err) {
        console.log("something failed: ", err);
    }
    window.showExtents = function() {
        var extents = map.getLayer("clusterExtents");
        if (extents) {
            map.removeLayer(extents);
        }
        extents = new GraphicsLayer({
            id: "clusterExtents"
        });
        var sym = new SimpleFillSymbol().setColor(new Color([205, 193, 197, 0.5]));

        arrayUtils.forEach(clusterLayer._clusters, function(c, idx) {
            var e = c.attributes.extent;
            extents.add(new Graphic(new Extent(e[0], e[1], e[2], e[3], map.spatialReference), sym));
        }, this);
        map.addLayer(extents, 0);
    };



});
